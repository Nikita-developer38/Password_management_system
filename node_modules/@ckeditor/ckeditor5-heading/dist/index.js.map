{"version":3,"sources":["index.js","../src/headingcommand.ts","../src/headingediting.ts","../src/utils.ts","../src/headingui.ts","../src/heading.ts","../src/headingbuttonsui.ts","../src/title.ts"],"names":["HeadingCommand","Command","refresh","block","first","editor","model","document","selection","getSelectedBlocks","value","modelElements","includes","name","isEnabled","some","heading","checkCanBecomeHeading","schema","execute","options","modelElement","change","writer","blocks","Array","from","filter","is","rename","constructor","checkChild","parent","isObject","defaultModelElement","HeadingEditing","Plugin","pluginName","requires","Paragraph","init","config","get","option","register","inheritAllFrom","conversion","elementToElement","push","_addDefaultH1Conversion","commands","add","afterInit","enterCommand","listenTo","evt","data","positionParent","getFirstPosition","isHeading","childCount","for","view","converterPriority","priorities","low","define","title","class","getLocalizedOptions","t","localizedTitles","map","HeadingUI","defaultTitle","accessibleLabel","ui","componentFactory","locale","titles","itemDefinitions","Collection","headingCommand","paragraphCommand","def","type","ViewModel","label","role","withText","bind","to","set","commandName","commandValue","dropdownView","createDropdown","addListToDropdown","ariaLabel","buttonView","ariaLabelledBy","undefined","isOn","tooltip","extendTemplate","attributes","toMany","areEnabled","paragraph","whichModel","source","editing","focus","menuView","MenuBarMenuView","listView","MenuBarMenuListView","panelView","children","listItemView","MenuBarMenuListItemView","MenuBarMenuListItemButtonView","items","delegate","on","Heading","defaultIcons","heading1","icons","heading2","heading3","heading4","heading5","heading6","HeadingButtonsUI","item","_createButton","ButtonView","command","icon","isToggleable","titleLikeElements","Set","Title","isBlock","allowIn","allowAttributes","extend","addAttributeCheck","context","endsWith","mapper","mapModelPositionToView","dispatcher","conversionApi","consumable","consume","upcastDispatcher","dataViewModelH1Insertion","priority","registerPostFixer","_fixTitleContent","_fixTitleElement","_fixBodyElement","_fixExtraParagraph","_attachPlaceholders","_attachTabPressHandling","getTitle","rootName","titleElement","_getTitleElement","titleContentElement","getChild","stringify","getBody","root","getRoot","viewWriter","DowncastWriter","rootRange","createRangeIn","viewDocumentFragment","createDocumentFragment","bodyStartPosition","createPositionAfter","bodyRange","createRange","createPositionAt","markers","Map","marker","intersection","getIntersection","getRange","clearBindings","bindElements","downcastDispatcher","convert","remove","createRangeOn","processor","toData","child","getChildren","isTitle","changed","getRootNames","maxOffset","titleChildren","shift","titleChild","move","modelRoot","getRoots","titleElements","firstTitleElement","firstRootChild","length","fixAdditionalTitleElements","has","createElement","insert","insertElement","changeElementToTitle","placeholder","_bodyPlaceholder","shouldRemoveLastParagraph","delete","sourceElement","titlePlaceholder","bodyPlaceholder","tagName","toLowerCase","getAttribute","element","toViewElement","enablePlaceholder","keepOnFocus","bodyViewElements","hasChanged","viewRoot","roots","isEmpty","body","oldBody","hidePlaceholder","removeAttribute","setAttribute","needsPlaceholder","showPlaceholder","keystrokes","cancel","selectedElements","firstBodyElement","setSelection","isCollapsed","selectedElement","selectionPosition","isAtStart","modelCursor","viewItem","modelWriter","titleContent","append","convertChildren","updateConversionResult","editingView","modelPosition","modelTitleElement","viewElement","viewPosition","stop","removeDisallowedAttributes","index","fixTitleElement"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Command, Plugin, icons } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { Paragraph } from '@ckeditor/ckeditor5-paragraph/dist/index.js';\nimport { first, priorities, Collection } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { ViewModel, createDropdown, addListToDropdown, MenuBarMenuView, MenuBarMenuListView, MenuBarMenuListItemView, MenuBarMenuListItemButtonView, ButtonView } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { DowncastWriter, enablePlaceholder, hidePlaceholder, needsPlaceholder, showPlaceholder } from '@ckeditor/ckeditor5-engine/dist/index.js';\n\nclass HeadingCommand extends Command {\n    /**\n     * @inheritDoc\n     */ refresh() {\n        const block = first(this.editor.model.document.selection.getSelectedBlocks());\n        this.value = !!block && this.modelElements.includes(block.name) && block.name;\n        this.isEnabled = !!block && this.modelElements.some((heading)=>checkCanBecomeHeading(block, heading, this.editor.model.schema));\n    }\n    /**\n     * Executes the command. Applies the heading to the selected blocks or, if the first selected\n     * block is a heading already, turns selected headings (of this level only) to paragraphs.\n     *\n     * @param options.value Name of the element which this command will apply in the model.\n     * @fires execute\n     */ execute(options) {\n        const model = this.editor.model;\n        const document = model.document;\n        const modelElement = options.value;\n        model.change((writer)=>{\n            const blocks = Array.from(document.selection.getSelectedBlocks()).filter((block)=>{\n                return checkCanBecomeHeading(block, modelElement, model.schema);\n            });\n            for (const block of blocks){\n                if (!block.is('element', modelElement)) {\n                    writer.rename(block, modelElement);\n                }\n            }\n        });\n    }\n    /**\n     * Creates an instance of the command.\n     *\n     * @param editor Editor instance.\n     * @param modelElements Names of the element which this command can apply in the model.\n     */ constructor(editor, modelElements){\n        super(editor);\n        this.modelElements = modelElements;\n    }\n}\n/**\n * Checks whether the given block can be replaced by a specific heading.\n *\n * @param block A block to be tested.\n * @param heading Command element name in the model.\n * @param schema The schema of the document.\n */ function checkCanBecomeHeading(block, heading, schema) {\n    return schema.checkChild(block.parent, heading) && !schema.isObject(block);\n}\n\nconst defaultModelElement = 'paragraph';\nclass HeadingEditing extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'HeadingEditing';\n    }\n    /**\n     * @inheritDoc\n     */ static get requires() {\n        return [\n            Paragraph\n        ];\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        const options = editor.config.get('heading.options');\n        const modelElements = [];\n        for (const option of options){\n            // Skip paragraph - it is defined in required Paragraph feature.\n            if (option.model === 'paragraph') {\n                continue;\n            }\n            // Schema.\n            editor.model.schema.register(option.model, {\n                inheritAllFrom: '$block'\n            });\n            editor.conversion.elementToElement(option);\n            modelElements.push(option.model);\n        }\n        this._addDefaultH1Conversion(editor);\n        // Register the heading command for this option.\n        editor.commands.add('heading', new HeadingCommand(editor, modelElements));\n    }\n    /**\n     * @inheritDoc\n     */ afterInit() {\n        // If the enter command is added to the editor, alter its behavior.\n        // Enter at the end of a heading element should create a paragraph.\n        const editor = this.editor;\n        const enterCommand = editor.commands.get('enter');\n        const options = editor.config.get('heading.options');\n        if (enterCommand) {\n            this.listenTo(enterCommand, 'afterExecute', (evt, data)=>{\n                const positionParent = editor.model.document.selection.getFirstPosition().parent;\n                const isHeading = options.some((option)=>positionParent.is('element', option.model));\n                if (isHeading && !positionParent.is('element', defaultModelElement) && positionParent.childCount === 0) {\n                    data.writer.rename(positionParent, defaultModelElement);\n                }\n            });\n        }\n    }\n    /**\n     * Adds default conversion for `h1` -> `heading1` with a low priority.\n     *\n     * @param editor Editor instance on which to add the `h1` conversion.\n     */ _addDefaultH1Conversion(editor) {\n        editor.conversion.for('upcast').elementToElement({\n            model: 'heading1',\n            view: 'h1',\n            // With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n            // this listener is called before it. If not, `h1` will be transformed into a paragraph.\n            converterPriority: priorities.low + 1\n        });\n    }\n    /**\n     * @inheritDoc\n     */ constructor(editor){\n        super(editor);\n        editor.config.define('heading', {\n            options: [\n                {\n                    model: 'paragraph',\n                    title: 'Paragraph',\n                    class: 'ck-heading_paragraph'\n                },\n                {\n                    model: 'heading1',\n                    view: 'h2',\n                    title: 'Heading 1',\n                    class: 'ck-heading_heading1'\n                },\n                {\n                    model: 'heading2',\n                    view: 'h3',\n                    title: 'Heading 2',\n                    class: 'ck-heading_heading2'\n                },\n                {\n                    model: 'heading3',\n                    view: 'h4',\n                    title: 'Heading 3',\n                    class: 'ck-heading_heading3'\n                }\n            ]\n        });\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/headingconfig~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n */ function getLocalizedOptions(editor) {\n    const t = editor.t;\n    const localizedTitles = {\n        'Paragraph': t('Paragraph'),\n        'Heading 1': t('Heading 1'),\n        'Heading 2': t('Heading 2'),\n        'Heading 3': t('Heading 3'),\n        'Heading 4': t('Heading 4'),\n        'Heading 5': t('Heading 5'),\n        'Heading 6': t('Heading 6')\n    };\n    return editor.config.get('heading.options').map((option)=>{\n        const title = localizedTitles[option.title];\n        if (title && title != option.title) {\n            option.title = title;\n        }\n        return option;\n    });\n}\n\nclass HeadingUI extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'HeadingUI';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        const t = editor.t;\n        const options = getLocalizedOptions(editor);\n        const defaultTitle = t('Choose heading');\n        const accessibleLabel = t('Heading');\n        // Register UI component.\n        editor.ui.componentFactory.add('heading', (locale)=>{\n            const titles = {};\n            const itemDefinitions = new Collection();\n            const headingCommand = editor.commands.get('heading');\n            const paragraphCommand = editor.commands.get('paragraph');\n            const commands = [\n                headingCommand\n            ];\n            for (const option of options){\n                const def = {\n                    type: 'button',\n                    model: new ViewModel({\n                        label: option.title,\n                        class: option.class,\n                        role: 'menuitemradio',\n                        withText: true\n                    })\n                };\n                if (option.model === 'paragraph') {\n                    def.model.bind('isOn').to(paragraphCommand, 'value');\n                    def.model.set('commandName', 'paragraph');\n                    commands.push(paragraphCommand);\n                } else {\n                    def.model.bind('isOn').to(headingCommand, 'value', (value)=>value === option.model);\n                    def.model.set({\n                        commandName: 'heading',\n                        commandValue: option.model\n                    });\n                }\n                // Add the option to the collection.\n                itemDefinitions.add(def);\n                titles[option.model] = option.title;\n            }\n            const dropdownView = createDropdown(locale);\n            addListToDropdown(dropdownView, itemDefinitions, {\n                ariaLabel: accessibleLabel,\n                role: 'menu'\n            });\n            dropdownView.buttonView.set({\n                ariaLabel: accessibleLabel,\n                ariaLabelledBy: undefined,\n                isOn: false,\n                withText: true,\n                tooltip: accessibleLabel\n            });\n            dropdownView.extendTemplate({\n                attributes: {\n                    class: [\n                        'ck-heading-dropdown'\n                    ]\n                }\n            });\n            dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', (...areEnabled)=>{\n                return areEnabled.some((isEnabled)=>isEnabled);\n            });\n            dropdownView.buttonView.bind('label').to(headingCommand, 'value', paragraphCommand, 'value', (heading, paragraph)=>{\n                const whichModel = paragraph ? 'paragraph' : heading;\n                if (typeof whichModel === 'boolean') {\n                    return defaultTitle;\n                }\n                // If none of the commands is active, display default title.\n                if (!titles[whichModel]) {\n                    return defaultTitle;\n                }\n                return titles[whichModel];\n            });\n            dropdownView.buttonView.bind('ariaLabel').to(headingCommand, 'value', paragraphCommand, 'value', (heading, paragraph)=>{\n                const whichModel = paragraph ? 'paragraph' : heading;\n                if (typeof whichModel === 'boolean') {\n                    return accessibleLabel;\n                }\n                // If none of the commands is active, display default title.\n                if (!titles[whichModel]) {\n                    return accessibleLabel;\n                }\n                return `${titles[whichModel]}, ${accessibleLabel}`;\n            });\n            // Execute command when an item from the dropdown is selected.\n            this.listenTo(dropdownView, 'execute', (evt)=>{\n                const { commandName, commandValue } = evt.source;\n                editor.execute(commandName, commandValue ? {\n                    value: commandValue\n                } : undefined);\n                editor.editing.view.focus();\n            });\n            return dropdownView;\n        });\n        editor.ui.componentFactory.add('menuBar:heading', (locale)=>{\n            const menuView = new MenuBarMenuView(locale);\n            const headingCommand = editor.commands.get('heading');\n            const paragraphCommand = editor.commands.get('paragraph');\n            const commands = [\n                headingCommand\n            ];\n            const listView = new MenuBarMenuListView(locale);\n            menuView.set({\n                class: 'ck-heading-dropdown'\n            });\n            listView.set({\n                ariaLabel: t('Heading'),\n                role: 'menu'\n            });\n            menuView.buttonView.set({\n                label: t('Heading')\n            });\n            menuView.panelView.children.add(listView);\n            for (const option of options){\n                const listItemView = new MenuBarMenuListItemView(locale, menuView);\n                const buttonView = new MenuBarMenuListItemButtonView(locale);\n                listItemView.children.add(buttonView);\n                listView.items.add(listItemView);\n                buttonView.set({\n                    label: option.title,\n                    role: 'menuitemradio',\n                    class: option.class\n                });\n                buttonView.bind('ariaChecked').to(buttonView, 'isOn');\n                buttonView.delegate('execute').to(menuView);\n                buttonView.on('execute', ()=>{\n                    const commandName = option.model === 'paragraph' ? 'paragraph' : 'heading';\n                    editor.execute(commandName, {\n                        value: option.model\n                    });\n                    editor.editing.view.focus();\n                });\n                if (option.model === 'paragraph') {\n                    buttonView.bind('isOn').to(paragraphCommand, 'value');\n                    commands.push(paragraphCommand);\n                } else {\n                    buttonView.bind('isOn').to(headingCommand, 'value', (value)=>value === option.model);\n                }\n            }\n            menuView.bind('isEnabled').toMany(commands, 'isEnabled', (...areEnabled)=>{\n                return areEnabled.some((isEnabled)=>isEnabled);\n            });\n            return menuView;\n        });\n    }\n}\n\nclass Heading extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get requires() {\n        return [\n            HeadingEditing,\n            HeadingUI\n        ];\n    }\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'Heading';\n    }\n}\n\nconst defaultIcons = {\n    heading1: icons.heading1,\n    heading2: icons.heading2,\n    heading3: icons.heading3,\n    heading4: icons.heading4,\n    heading5: icons.heading5,\n    heading6: icons.heading6\n};\nclass HeadingButtonsUI extends Plugin {\n    /**\n     * @inheritDoc\n     */ init() {\n        const options = getLocalizedOptions(this.editor);\n        options.filter((item)=>item.model !== 'paragraph').map((item)=>this._createButton(item));\n    }\n    /**\n     * Creates single button view from provided configuration option.\n     */ _createButton(option) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(option.model, (locale)=>{\n            const view = new ButtonView(locale);\n            const command = editor.commands.get('heading');\n            view.label = option.title;\n            view.icon = option.icon || defaultIcons[option.model];\n            view.tooltip = true;\n            view.isToggleable = true;\n            view.bind('isEnabled').to(command);\n            view.bind('isOn').to(command, 'value', (value)=>value == option.model);\n            view.on('execute', ()=>{\n                editor.execute('heading', {\n                    value: option.model\n                });\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}\n\n// A list of element names that should be treated by the Title plugin as title-like.\n// This means that an element of a type from this list will be changed to a title element\n// when it is the first element in the root.\nconst titleLikeElements = new Set([\n    'paragraph',\n    'heading1',\n    'heading2',\n    'heading3',\n    'heading4',\n    'heading5',\n    'heading6'\n]);\nclass Title extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'Title';\n    }\n    /**\n     * @inheritDoc\n     */ static get requires() {\n        return [\n            'Paragraph'\n        ];\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        const model = editor.model;\n        // To use the schema for disabling some features when the selection is inside the title element\n        // it is needed to create the following structure:\n        //\n        // <title>\n        //     <title-content>The title text</title-content>\n        // </title>\n        //\n        // See: https://github.com/ckeditor/ckeditor5/issues/2005.\n        model.schema.register('title', {\n            isBlock: true,\n            allowIn: '$root'\n        });\n        model.schema.register('title-content', {\n            isBlock: true,\n            allowIn: 'title',\n            allowAttributes: [\n                'alignment'\n            ]\n        });\n        model.schema.extend('$text', {\n            allowIn: 'title-content'\n        });\n        // Disallow all attributes in `title-content`.\n        model.schema.addAttributeCheck((context)=>{\n            if (context.endsWith('title-content $text')) {\n                return false;\n            }\n        });\n        // Because `title` is represented by two elements in the model\n        // but only one in the view, it is needed to adjust Mapper.\n        editor.editing.mapper.on('modelToViewPosition', mapModelPositionToView(editor.editing.view));\n        editor.data.mapper.on('modelToViewPosition', mapModelPositionToView(editor.editing.view));\n        // Conversion.\n        editor.conversion.for('downcast').elementToElement({\n            model: 'title-content',\n            view: 'h1'\n        });\n        editor.conversion.for('downcast').add((dispatcher)=>dispatcher.on('insert:title', (evt, data, conversionApi)=>{\n                conversionApi.consumable.consume(data.item, evt.name);\n            }));\n        // Custom converter is used for data v -> m conversion to avoid calling post-fixer when setting data.\n        // See https://github.com/ckeditor/ckeditor5/issues/2036.\n        editor.data.upcastDispatcher.on('element:h1', dataViewModelH1Insertion, {\n            priority: 'high'\n        });\n        editor.data.upcastDispatcher.on('element:h2', dataViewModelH1Insertion, {\n            priority: 'high'\n        });\n        editor.data.upcastDispatcher.on('element:h3', dataViewModelH1Insertion, {\n            priority: 'high'\n        });\n        // Take care about correct `title` element structure.\n        model.document.registerPostFixer((writer)=>this._fixTitleContent(writer));\n        // Create and take care of correct position of a `title` element.\n        model.document.registerPostFixer((writer)=>this._fixTitleElement(writer));\n        // Create element for `Body` placeholder if it is missing.\n        model.document.registerPostFixer((writer)=>this._fixBodyElement(writer));\n        // Prevent from adding extra at the end of the document.\n        model.document.registerPostFixer((writer)=>this._fixExtraParagraph(writer));\n        // Attach `Title` and `Body` placeholders to the empty title and/or content.\n        this._attachPlaceholders();\n        // Attach Tab handling.\n        this._attachTabPressHandling();\n    }\n    /**\n     * Returns the title of the document. Note that because this plugin does not allow any formatting inside\n     * the title element, the output of this method will be a plain text, with no HTML tags.\n     *\n     * It is not recommended to use this method together with features that insert markers to the\n     * data output, like comments or track changes features. If such markers start in the title and end in the\n     * body, the result of this method might be incorrect.\n     *\n     * @param options Additional configuration passed to the conversion process.\n     * See {@link module:engine/controller/datacontroller~DataController#get `DataController#get`}.\n     * @returns The title of the document.\n     */ getTitle(options = {}) {\n        const rootName = options.rootName ? options.rootName : undefined;\n        const titleElement = this._getTitleElement(rootName);\n        const titleContentElement = titleElement.getChild(0);\n        return this.editor.data.stringify(titleContentElement, options);\n    }\n    /**\n     * Returns the body of the document.\n     *\n     * Note that it is not recommended to use this method together with features that insert markers to the\n     * data output, like comments or track changes features. If such markers start in the title and end in the\n     * body, the result of this method might be incorrect.\n     *\n     * @param options Additional configuration passed to the conversion process.\n     * See {@link module:engine/controller/datacontroller~DataController#get `DataController#get`}.\n     * @returns The body of the document.\n     */ getBody(options = {}) {\n        const editor = this.editor;\n        const data = editor.data;\n        const model = editor.model;\n        const rootName = options.rootName ? options.rootName : undefined;\n        const root = editor.model.document.getRoot(rootName);\n        const view = editor.editing.view;\n        const viewWriter = new DowncastWriter(view.document);\n        const rootRange = model.createRangeIn(root);\n        const viewDocumentFragment = viewWriter.createDocumentFragment();\n        // Find all markers that intersects with body.\n        const bodyStartPosition = model.createPositionAfter(root.getChild(0));\n        const bodyRange = model.createRange(bodyStartPosition, model.createPositionAt(root, 'end'));\n        const markers = new Map();\n        for (const marker of model.markers){\n            const intersection = bodyRange.getIntersection(marker.getRange());\n            if (intersection) {\n                markers.set(marker.name, intersection);\n            }\n        }\n        // Convert the entire root to view.\n        data.mapper.clearBindings();\n        data.mapper.bindElements(root, viewDocumentFragment);\n        data.downcastDispatcher.convert(rootRange, markers, viewWriter, options);\n        // Remove title element from view.\n        viewWriter.remove(viewWriter.createRangeOn(viewDocumentFragment.getChild(0)));\n        // view -> data\n        return editor.data.processor.toData(viewDocumentFragment);\n    }\n    /**\n     * Returns the `title` element when it is in the document. Returns `undefined` otherwise.\n     */ _getTitleElement(rootName) {\n        const root = this.editor.model.document.getRoot(rootName);\n        for (const child of root.getChildren()){\n            if (isTitle(child)) {\n                return child;\n            }\n        }\n    }\n    /**\n     * Model post-fixer callback that ensures that `title` has only one `title-content` child.\n     * All additional children should be moved after the `title` element and renamed to a paragraph.\n     */ _fixTitleContent(writer) {\n        let changed = false;\n        for (const rootName of this.editor.model.document.getRootNames()){\n            const title = this._getTitleElement(rootName);\n            // If there is no title in the content it will be created by `_fixTitleElement` post-fixer.\n            // If the title has just one element, then it is correct. No fixing.\n            if (!title || title.maxOffset === 1) {\n                continue;\n            }\n            const titleChildren = Array.from(title.getChildren());\n            // Skip first child because it is an allowed element.\n            titleChildren.shift();\n            for (const titleChild of titleChildren){\n                writer.move(writer.createRangeOn(titleChild), title, 'after');\n                writer.rename(titleChild, 'paragraph');\n            }\n            changed = true;\n        }\n        return changed;\n    }\n    /**\n     * Model post-fixer callback that creates a title element when it is missing,\n     * takes care of the correct position of it and removes additional title elements.\n     */ _fixTitleElement(writer) {\n        let changed = false;\n        const model = this.editor.model;\n        for (const modelRoot of this.editor.model.document.getRoots()){\n            const titleElements = Array.from(modelRoot.getChildren()).filter(isTitle);\n            const firstTitleElement = titleElements[0];\n            const firstRootChild = modelRoot.getChild(0);\n            // When title element is at the beginning of the document then try to fix additional title elements (if there are any).\n            if (firstRootChild.is('element', 'title')) {\n                if (titleElements.length > 1) {\n                    fixAdditionalTitleElements(titleElements, writer, model);\n                    changed = true;\n                }\n                continue;\n            }\n            // When there is no title in the document and first element in the document cannot be changed\n            // to the title then create an empty title element at the beginning of the document.\n            if (!firstTitleElement && !titleLikeElements.has(firstRootChild.name)) {\n                const title = writer.createElement('title');\n                writer.insert(title, modelRoot);\n                writer.insertElement('title-content', title);\n                changed = true;\n                continue;\n            }\n            if (titleLikeElements.has(firstRootChild.name)) {\n                // Change the first element in the document to the title if it can be changed (is title-like).\n                changeElementToTitle(firstRootChild, writer, model);\n            } else {\n                // Otherwise, move the first occurrence of the title element to the beginning of the document.\n                writer.move(writer.createRangeOn(firstTitleElement), modelRoot, 0);\n            }\n            fixAdditionalTitleElements(titleElements, writer, model);\n            changed = true;\n        }\n        return changed;\n    }\n    /**\n     * Model post-fixer callback that adds an empty paragraph at the end of the document\n     * when it is needed for the placeholder purposes.\n     */ _fixBodyElement(writer) {\n        let changed = false;\n        for (const rootName of this.editor.model.document.getRootNames()){\n            const modelRoot = this.editor.model.document.getRoot(rootName);\n            if (modelRoot.childCount < 2) {\n                const placeholder = writer.createElement('paragraph');\n                writer.insert(placeholder, modelRoot, 1);\n                this._bodyPlaceholder.set(rootName, placeholder);\n                changed = true;\n            }\n        }\n        return changed;\n    }\n    /**\n     * Model post-fixer callback that removes a paragraph from the end of the document\n     * if it was created for the placeholder purposes and is not needed anymore.\n     */ _fixExtraParagraph(writer) {\n        let changed = false;\n        for (const rootName of this.editor.model.document.getRootNames()){\n            const root = this.editor.model.document.getRoot(rootName);\n            const placeholder = this._bodyPlaceholder.get(rootName);\n            if (shouldRemoveLastParagraph(placeholder, root)) {\n                this._bodyPlaceholder.delete(rootName);\n                writer.remove(placeholder);\n                changed = true;\n            }\n        }\n        return changed;\n    }\n    /**\n     * Attaches the `Title` and `Body` placeholders to the title and/or content.\n     */ _attachPlaceholders() {\n        const editor = this.editor;\n        const t = editor.t;\n        const view = editor.editing.view;\n        const sourceElement = editor.sourceElement;\n        const titlePlaceholder = editor.config.get('title.placeholder') || t('Type your title');\n        const bodyPlaceholder = editor.config.get('placeholder') || sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute('placeholder') || t('Type or paste your content here.');\n        // Attach placeholder to the view title element.\n        editor.editing.downcastDispatcher.on('insert:title-content', (evt, data, conversionApi)=>{\n            const element = conversionApi.mapper.toViewElement(data.item);\n            element.placeholder = titlePlaceholder;\n            enablePlaceholder({\n                view,\n                element,\n                keepOnFocus: true\n            });\n        });\n        // Attach placeholder to first element after a title element and remove it if it's not needed anymore.\n        // First element after title can change, so we need to observe all changes keep placeholder in sync.\n        const bodyViewElements = new Map();\n        // This post-fixer runs after the model post-fixer, so we can assume that the second child in view root will always exist.\n        view.document.registerPostFixer((writer)=>{\n            let hasChanged = false;\n            for (const viewRoot of view.document.roots){\n                // `viewRoot` can be empty despite the model post-fixers if the model root was detached.\n                if (viewRoot.isEmpty) {\n                    continue;\n                }\n                // If `viewRoot` is not empty, then we can expect at least two elements in it.\n                const body = viewRoot.getChild(1);\n                const oldBody = bodyViewElements.get(viewRoot.rootName);\n                // If body element has changed we need to disable placeholder on the previous element and enable on the new one.\n                if (body !== oldBody) {\n                    if (oldBody) {\n                        hidePlaceholder(writer, oldBody);\n                        writer.removeAttribute('data-placeholder', oldBody);\n                    }\n                    writer.setAttribute('data-placeholder', bodyPlaceholder, body);\n                    bodyViewElements.set(viewRoot.rootName, body);\n                    hasChanged = true;\n                }\n                // Then we need to display placeholder if it is needed.\n                // See: https://github.com/ckeditor/ckeditor5/issues/8689.\n                if (needsPlaceholder(body, true) && viewRoot.childCount === 2 && body.name === 'p') {\n                    hasChanged = showPlaceholder(writer, body) ? true : hasChanged;\n                } else {\n                    // Or hide if it is not needed.\n                    hasChanged = hidePlaceholder(writer, body) ? true : hasChanged;\n                }\n            }\n            return hasChanged;\n        });\n    }\n    /**\n     * Creates navigation between the title and body sections using <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keys.\n     */ _attachTabPressHandling() {\n        const editor = this.editor;\n        const model = editor.model;\n        // Pressing <kbd>Tab</kbd> inside the title should move the caret to the body.\n        editor.keystrokes.set('TAB', (data, cancel)=>{\n            model.change((writer)=>{\n                const selection = model.document.selection;\n                const selectedElements = Array.from(selection.getSelectedBlocks());\n                if (selectedElements.length === 1 && selectedElements[0].is('element', 'title-content')) {\n                    const root = selection.getFirstPosition().root;\n                    const firstBodyElement = root.getChild(1);\n                    writer.setSelection(firstBodyElement, 0);\n                    cancel();\n                }\n            });\n        });\n        // Pressing <kbd>Shift</kbd>+<kbd>Tab</kbd> at the beginning of the body should move the caret to the title.\n        editor.keystrokes.set('SHIFT + TAB', (data, cancel)=>{\n            model.change((writer)=>{\n                const selection = model.document.selection;\n                if (!selection.isCollapsed) {\n                    return;\n                }\n                const selectedElement = first(selection.getSelectedBlocks());\n                const selectionPosition = selection.getFirstPosition();\n                const root = editor.model.document.getRoot(selectionPosition.root.rootName);\n                const title = root.getChild(0);\n                const body = root.getChild(1);\n                if (selectedElement === body && selectionPosition.isAtStart) {\n                    writer.setSelection(title.getChild(0), 0);\n                    cancel();\n                }\n            });\n        });\n    }\n    constructor(){\n        super(...arguments);\n        /**\n         * A reference to an empty paragraph in the body\n         * created when there is no element in the body for the placeholder purposes.\n         */ this._bodyPlaceholder = new Map();\n    }\n}\n/**\n * A view-to-model converter for the h1 that appears at the beginning of the document (a title element).\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param evt An object containing information about the fired event.\n * @param data An object containing conversion input, a placeholder for conversion output and possibly other values.\n * @param conversionApi Conversion interface to be used by the callback.\n */ function dataViewModelH1Insertion(evt, data, conversionApi) {\n    const modelCursor = data.modelCursor;\n    const viewItem = data.viewItem;\n    if (!modelCursor.isAtStart || !modelCursor.parent.is('element', '$root')) {\n        return;\n    }\n    if (!conversionApi.consumable.consume(viewItem, {\n        name: true\n    })) {\n        return;\n    }\n    const modelWriter = conversionApi.writer;\n    const title = modelWriter.createElement('title');\n    const titleContent = modelWriter.createElement('title-content');\n    modelWriter.append(titleContent, title);\n    modelWriter.insert(title, modelCursor);\n    conversionApi.convertChildren(viewItem, titleContent);\n    conversionApi.updateConversionResult(title, data);\n}\n/**\n * Maps position from the beginning of the model `title` element to the beginning of the view `h1` element.\n *\n * ```html\n * <title>^<title-content>Foo</title-content></title> -> <h1>^Foo</h1>\n * ```\n */ function mapModelPositionToView(editingView) {\n    return (evt, data)=>{\n        const positionParent = data.modelPosition.parent;\n        if (!positionParent.is('element', 'title')) {\n            return;\n        }\n        const modelTitleElement = positionParent.parent;\n        const viewElement = data.mapper.toViewElement(modelTitleElement);\n        data.viewPosition = editingView.createPositionAt(viewElement, 0);\n        evt.stop();\n    };\n}\n/**\n * @returns Returns true when given element is a title. Returns false otherwise.\n */ function isTitle(element) {\n    return element.is('element', 'title');\n}\n/**\n * Changes the given element to the title element.\n */ function changeElementToTitle(element, writer, model) {\n    const title = writer.createElement('title');\n    writer.insert(title, element, 'before');\n    writer.insert(element, title, 0);\n    writer.rename(element, 'title-content');\n    model.schema.removeDisallowedAttributes([\n        element\n    ], writer);\n}\n/**\n * Loops over the list of title elements and fixes additional ones.\n *\n * @returns Returns true when there was any change. Returns false otherwise.\n */ function fixAdditionalTitleElements(titleElements, writer, model) {\n    let hasChanged = false;\n    for (const title of titleElements){\n        if (title.index !== 0) {\n            fixTitleElement(title, writer, model);\n            hasChanged = true;\n        }\n    }\n    return hasChanged;\n}\n/**\n * Changes given title element to a paragraph or removes it when it is empty.\n */ function fixTitleElement(title, writer, model) {\n    const child = title.getChild(0);\n    // Empty title should be removed.\n    // It is created as a result of pasting to the title element.\n    if (child.isEmpty) {\n        writer.remove(title);\n        return;\n    }\n    writer.move(writer.createRangeOn(child), title, 'before');\n    writer.rename(child, 'paragraph');\n    writer.remove(title);\n    model.schema.removeDisallowedAttributes([\n        child\n    ], writer);\n}\n/**\n * Returns true when the last paragraph in the document was created only for the placeholder\n * purpose and it's not needed anymore. Returns false otherwise.\n */ function shouldRemoveLastParagraph(placeholder, root) {\n    if (!placeholder || !placeholder.is('element', 'paragraph') || placeholder.childCount) {\n        return false;\n    }\n    if (root.childCount <= 2 || root.getChild(root.childCount - 1) !== placeholder) {\n        return false;\n    }\n    return true;\n}\n\nexport { Heading, HeadingButtonsUI, HeadingEditing, HeadingUI, Title };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingcommand\n */\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\nimport { first } from 'ckeditor5/src/utils.js';\n\nimport type { Element, Schema } from 'ckeditor5/src/engine.js';\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n */\nexport default class HeadingCommand extends Command {\n\t/**\n\t * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n\t * the value is set to the name of that heading model element.\n\t * It is  set to `false` otherwise.\n\t *\n\t * @observable\n\t * @readonly\n\t */\n\tdeclare public value: false | string;\n\n\t/**\n\t * Set of defined model's elements names that this command support.\n\t * See {@link module:heading/headingconfig~HeadingOption}.\n\t */\n\tpublic readonly modelElements: Array<string>;\n\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param editor Editor instance.\n\t * @param modelElements Names of the element which this command can apply in the model.\n\t */\n\tconstructor( editor: Editor, modelElements: Array<string> ) {\n\t\tsuper( editor );\n\n\t\tthis.modelElements = modelElements;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tconst block = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && this.modelElements.includes( block.name ) && block.name;\n\t\tthis.isEnabled = !!block && this.modelElements.some( heading => checkCanBecomeHeading( block, heading, this.editor.model.schema ) );\n\t}\n\n\t/**\n\t * Executes the command. Applies the heading to the selected blocks or, if the first selected\n\t * block is a heading already, turns selected headings (of this level only) to paragraphs.\n\t *\n\t * @param options.value Name of the element which this command will apply in the model.\n\t * @fires execute\n\t */\n\tpublic override execute( options: { value: string } ): void {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tconst modelElement = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t\t.filter( block => {\n\t\t\t\t\treturn checkCanBecomeHeading( block, modelElement, model.schema );\n\t\t\t\t} );\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'element', modelElement ) ) {\n\t\t\t\t\twriter.rename( block, modelElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Checks whether the given block can be replaced by a specific heading.\n *\n * @param block A block to be tested.\n * @param heading Command element name in the model.\n * @param schema The schema of the document.\n */\nfunction checkCanBecomeHeading( block: Element, heading: string, schema: Schema ) {\n\treturn schema.checkChild( block.parent as Element, heading ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingediting\n */\n\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\nimport { Paragraph } from 'ckeditor5/src/paragraph.js';\nimport { priorities } from 'ckeditor5/src/utils.js';\nimport type { EnterCommandAfterExecuteEvent } from 'ckeditor5/src/enter.js';\nimport type { HeadingOption } from './headingconfig.js';\n\nimport HeadingCommand from './headingcommand.js';\n\nconst defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n */\nexport default class HeadingEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HeadingEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'heading', {\n\t\t\toptions: [\n\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ Paragraph ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst options: Array<HeadingOption> = editor.config.get( 'heading.options' )!;\n\n\t\tconst modelElements = [];\n\n\t\tfor ( const option of options ) {\n\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\tif ( option.model === 'paragraph' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Schema.\n\t\t\teditor.model.schema.register( option.model, {\n\t\t\t\tinheritAllFrom: '$block'\n\t\t\t} );\n\n\t\t\teditor.conversion.elementToElement( option );\n\n\t\t\tmodelElements.push( option.model );\n\t\t}\n\n\t\tthis._addDefaultH1Conversion( editor );\n\n\t\t// Register the heading command for this option.\n\t\teditor.commands.add( 'heading', new HeadingCommand( editor, modelElements ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic afterInit(): void {\n\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t// Enter at the end of a heading element should create a paragraph.\n\t\tconst editor = this.editor;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\t\tconst options: Array<HeadingOption> = editor.config.get( 'heading.options' )!;\n\n\t\tif ( enterCommand ) {\n\t\t\tthis.listenTo<EnterCommandAfterExecuteEvent>( enterCommand, 'afterExecute', ( evt, data ) => {\n\t\t\t\tconst positionParent = editor.model.document.selection.getFirstPosition()!.parent;\n\t\t\t\tconst isHeading = options.some( option => positionParent.is( 'element', option.model ) );\n\n\t\t\t\tif ( isHeading && !positionParent.is( 'element', defaultModelElement ) && positionParent.childCount === 0 ) {\n\t\t\t\t\tdata.writer.rename( positionParent, defaultModelElement );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds default conversion for `h1` -> `heading1` with a low priority.\n\t *\n\t * @param editor Editor instance on which to add the `h1` conversion.\n\t */\n\tprivate _addDefaultH1Conversion( editor: Editor ) {\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: 'heading1',\n\t\t\tview: 'h1',\n\t\t\t// With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n\t\t\t// this listener is called before it. If not, `h1` will be transformed into a paragraph.\n\t\t\tconverterPriority: priorities.low + 1\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/utils\n */\n\nimport type { Editor } from 'ckeditor5/src/core.js';\n\nimport type { HeadingOption } from './headingconfig.js';\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/headingconfig~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n */\nexport function getLocalizedOptions( editor: Editor ): Array<HeadingOption> {\n\tconst t = editor.t;\n\tconst localizedTitles: Record<string, string> = {\n\t\t'Paragraph': t( 'Paragraph' ),\n\t\t'Heading 1': t( 'Heading 1' ),\n\t\t'Heading 2': t( 'Heading 2' ),\n\t\t'Heading 3': t( 'Heading 3' ),\n\t\t'Heading 4': t( 'Heading 4' ),\n\t\t'Heading 5': t( 'Heading 5' ),\n\t\t'Heading 6': t( 'Heading 6' )\n\t};\n\n\treturn editor.config.get( 'heading.options' )!.map( option => {\n\t\tconst title = localizedTitles[ option.title ];\n\n\t\tif ( title && title != option.title ) {\n\t\t\toption.title = title;\n\t\t}\n\n\t\treturn option;\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingui\n */\n\nimport { Plugin, type Command } from 'ckeditor5/src/core.js';\nimport {\n\tViewModel,\n\tcreateDropdown,\n\taddListToDropdown,\n\ttype ButtonExecuteEvent,\n\ttype ListDropdownItemDefinition,\n\tMenuBarMenuListItemView,\n\tMenuBarMenuListView,\n\tMenuBarMenuView,\n\tMenuBarMenuListItemButtonView\n} from 'ckeditor5/src/ui.js';\nimport { Collection } from 'ckeditor5/src/utils.js';\nimport type { ParagraphCommand } from 'ckeditor5/src/paragraph.js';\n\nimport { getLocalizedOptions } from './utils.js';\nimport type HeadingCommand from './headingcommand.js';\n\nimport '../theme/heading.css';\n\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n */\nexport default class HeadingUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HeadingUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst options = getLocalizedOptions( editor );\n\t\tconst defaultTitle = t( 'Choose heading' );\n\t\tconst accessibleLabel = t( 'Heading' );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( 'heading', locale => {\n\t\t\tconst titles: Record<string, string> = {};\n\t\t\tconst itemDefinitions: Collection<ListDropdownItemDefinition> = new Collection();\n\t\t\tconst headingCommand: HeadingCommand = editor.commands.get( 'heading' )!;\n\t\t\tconst paragraphCommand: ParagraphCommand = editor.commands.get( 'paragraph' )!;\n\t\t\tconst commands: Array<Command> = [ headingCommand ];\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst def: ListDropdownItemDefinition = {\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: new ViewModel( {\n\t\t\t\t\t\tlabel: option.title,\n\t\t\t\t\t\tclass: option.class,\n\t\t\t\t\t\trole: 'menuitemradio',\n\t\t\t\t\t\twithText: true\n\t\t\t\t\t} )\n\t\t\t\t};\n\n\t\t\t\tif ( option.model === 'paragraph' ) {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( paragraphCommand, 'value' );\n\t\t\t\t\tdef.model.set( 'commandName', 'paragraph' );\n\t\t\t\t\tcommands.push( paragraphCommand );\n\t\t\t\t} else {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( headingCommand, 'value', value => value === option.model );\n\t\t\t\t\tdef.model.set( {\n\t\t\t\t\t\tcommandName: 'heading',\n\t\t\t\t\t\tcommandValue: option.model\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Add the option to the collection.\n\t\t\t\titemDefinitions.add( def );\n\n\t\t\t\ttitles[ option.model ] = option.title;\n\t\t\t}\n\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, itemDefinitions, {\n\t\t\t\tariaLabel: accessibleLabel,\n\t\t\t\trole: 'menu'\n\t\t\t} );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tariaLabel: accessibleLabel,\n\t\t\t\tariaLabelledBy: undefined,\n\t\t\t\tisOn: false,\n\t\t\t\twithText: true,\n\t\t\t\ttooltip: accessibleLabel\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-heading-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => {\n\t\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t\t} );\n\n\t\t\tdropdownView.buttonView.bind( 'label' ).to( headingCommand, 'value', paragraphCommand, 'value', ( heading, paragraph ) => {\n\t\t\t\tconst whichModel = paragraph ? 'paragraph' : heading;\n\n\t\t\t\tif ( typeof whichModel === 'boolean' ) {\n\t\t\t\t\treturn defaultTitle;\n\t\t\t\t}\n\n\t\t\t\t// If none of the commands is active, display default title.\n\t\t\t\tif ( !titles[ whichModel ] ) {\n\t\t\t\t\treturn defaultTitle;\n\t\t\t\t}\n\n\t\t\t\treturn titles[ whichModel ];\n\t\t\t} );\n\n\t\t\tdropdownView.buttonView.bind( 'ariaLabel' ).to( headingCommand, 'value', paragraphCommand, 'value', ( heading, paragraph ) => {\n\t\t\t\tconst whichModel = paragraph ? 'paragraph' : heading;\n\n\t\t\t\tif ( typeof whichModel === 'boolean' ) {\n\t\t\t\t\treturn accessibleLabel;\n\t\t\t\t}\n\n\t\t\t\t// If none of the commands is active, display default title.\n\t\t\t\tif ( !titles[ whichModel ] ) {\n\t\t\t\t\treturn accessibleLabel;\n\t\t\t\t}\n\n\t\t\t\treturn `${ titles[ whichModel ] }, ${ accessibleLabel }`;\n\t\t\t} );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo<ButtonExecuteEvent>( dropdownView, 'execute', evt => {\n\t\t\t\tconst { commandName, commandValue } = evt.source as any;\n\t\t\t\teditor.execute( commandName, commandValue ? { value: commandValue } : undefined );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:heading', locale => {\n\t\t\tconst menuView = new MenuBarMenuView( locale );\n\t\t\tconst headingCommand: HeadingCommand = editor.commands.get( 'heading' )!;\n\t\t\tconst paragraphCommand: ParagraphCommand = editor.commands.get( 'paragraph' )!;\n\t\t\tconst commands: Array<Command> = [ headingCommand ];\n\t\t\tconst listView = new MenuBarMenuListView( locale );\n\n\t\t\tmenuView.set( {\n\t\t\t\tclass: 'ck-heading-dropdown'\n\t\t\t} );\n\n\t\t\tlistView.set( {\n\t\t\t\tariaLabel: t( 'Heading' ),\n\t\t\t\trole: 'menu'\n\t\t\t} );\n\n\t\t\tmenuView.buttonView.set( {\n\t\t\t\tlabel: t( 'Heading' )\n\t\t\t} );\n\n\t\t\tmenuView.panelView.children.add( listView );\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst listItemView = new MenuBarMenuListItemView( locale, menuView );\n\t\t\t\tconst buttonView = new MenuBarMenuListItemButtonView( locale );\n\n\t\t\t\tlistItemView.children.add( buttonView );\n\t\t\t\tlistView.items.add( listItemView );\n\n\t\t\t\tbuttonView.set( {\n\t\t\t\t\tlabel: option.title,\n\t\t\t\t\trole: 'menuitemradio',\n\t\t\t\t\tclass: option.class\n\t\t\t\t} );\n\n\t\t\t\tbuttonView.bind( 'ariaChecked' ).to( buttonView, 'isOn' );\n\t\t\t\tbuttonView.delegate( 'execute' ).to( menuView );\n\n\t\t\t\tbuttonView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\t\t\tconst commandName = option.model === 'paragraph' ? 'paragraph' : 'heading';\n\n\t\t\t\t\teditor.execute( commandName, { value: option.model } );\n\t\t\t\t\teditor.editing.view.focus();\n\t\t\t\t} );\n\n\t\t\t\tif ( option.model === 'paragraph' ) {\n\t\t\t\t\tbuttonView.bind( 'isOn' ).to( paragraphCommand, 'value' );\n\t\t\t\t\tcommands.push( paragraphCommand );\n\t\t\t\t} else {\n\t\t\t\t\tbuttonView.bind( 'isOn' ).to( headingCommand, 'value', value => value === option.model );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmenuView.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => {\n\t\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t\t} );\n\n\t\t\treturn menuView;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/heading\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport HeadingEditing from './headingediting.js';\nimport HeadingUI from './headingui.js';\n\nimport '../theme/heading.css';\n\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature} guide\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Heading extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ HeadingEditing, HeadingUI ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Heading' as const;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingbuttonsui\n */\n\nimport { icons, Plugin } from 'ckeditor5/src/core.js';\nimport { ButtonView } from 'ckeditor5/src/ui.js';\n\nimport { getLocalizedOptions } from './utils.js';\nimport type { HeadingOption } from './headingconfig.js';\nimport type HeadingCommand from './headingcommand.js';\n\nconst defaultIcons: Record<string, string> = {\n\theading1: icons.heading1,\n\theading2: icons.heading2,\n\theading3: icons.heading3,\n\theading4: icons.heading4,\n\theading5: icons.heading5,\n\theading6: icons.heading6\n};\n\n/**\n * The `HeadingButtonsUI` plugin defines a set of UI buttons that can be used instead of the\n * standard drop down component.\n *\n * This feature is not enabled by default by the {@link module:heading/heading~Heading} plugin and needs to be\n * installed manually to the editor configuration.\n *\n * Plugin introduces button UI elements, which names are same as `model` property from {@link module:heading/headingconfig~HeadingOption}.\n *\n * ```ts\n * ClassicEditor\n *   .create( {\n *     plugins: [ ..., Heading, Paragraph, HeadingButtonsUI, ParagraphButtonUI ]\n *     heading: {\n *       options: [\n *         { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *         { model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *         { model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *         { model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *       ]\n *      },\n *      toolbar: [ 'paragraph', 'heading1', 'heading2', 'heading3' ]\n *   } )\n *   .then( ... )\n *   .catch( ... );\n * ```\n *\n * NOTE: The `'paragraph'` button is defined in by the {@link module:paragraph/paragraphbuttonui~ParagraphButtonUI} plugin\n * which needs to be loaded manually as well.\n *\n * It is possible to use custom icons by providing `icon` config option in {@link module:heading/headingconfig~HeadingOption}.\n * For the default configuration standard icons are used.\n */\nexport default class HeadingButtonsUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst options = getLocalizedOptions( this.editor );\n\n\t\toptions\n\t\t\t.filter( item => item.model !== 'paragraph' )\n\t\t\t.map( item => this._createButton( item ) );\n\t}\n\n\t/**\n\t * Creates single button view from provided configuration option.\n\t */\n\tprivate _createButton( option: HeadingOption ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( option.model, locale => {\n\t\t\tconst view = new ButtonView( locale );\n\t\t\tconst command: HeadingCommand = editor.commands.get( 'heading' )!;\n\n\t\t\tview.label = option.title;\n\t\t\tview.icon = option.icon || defaultIcons[ option.model ];\n\t\t\tview.tooltip = true;\n\t\t\tview.isToggleable = true;\n\t\t\tview.bind( 'isEnabled' ).to( command );\n\t\t\tview.bind( 'isOn' ).to( command, 'value', value => value == option.model );\n\n\t\t\tview.on( 'execute', () => {\n\t\t\t\teditor.execute( 'heading', { value: option.model } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/title\n */\n\nimport { Plugin, type Editor, type ElementApi } from 'ckeditor5/src/core.js';\nimport { first, type GetCallback } from 'ckeditor5/src/utils.js';\nimport {\n\tDowncastWriter,\n\tenablePlaceholder,\n\thidePlaceholder,\n\tneedsPlaceholder,\n\tshowPlaceholder,\n\ttype DowncastInsertEvent,\n\ttype Element,\n\ttype MapperModelToViewPositionEvent,\n\ttype Model,\n\ttype RootElement,\n\ttype UpcastConversionApi,\n\ttype UpcastConversionData,\n\ttype UpcastElementEvent,\n\ttype EditingView,\n\ttype ViewElement,\n\ttype Writer,\n\ttype PlaceholderableElement\n} from 'ckeditor5/src/engine.js';\n\n// A list of element names that should be treated by the Title plugin as title-like.\n// This means that an element of a type from this list will be changed to a title element\n// when it is the first element in the root.\nconst titleLikeElements = new Set( [ 'paragraph', 'heading1', 'heading2', 'heading3', 'heading4', 'heading5', 'heading6' ] );\n\n/**\n * The Title plugin.\n *\n * It splits the document into `Title` and `Body` sections.\n */\nexport default class Title extends Plugin {\n\t/**\n\t * A reference to an empty paragraph in the body\n\t * created when there is no element in the body for the placeholder purposes.\n\t */\n\tprivate _bodyPlaceholder = new Map<string, Element>();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Title' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ 'Paragraph' ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\t// To use the schema for disabling some features when the selection is inside the title element\n\t\t// it is needed to create the following structure:\n\t\t//\n\t\t// <title>\n\t\t//     <title-content>The title text</title-content>\n\t\t// </title>\n\t\t//\n\t\t// See: https://github.com/ckeditor/ckeditor5/issues/2005.\n\t\tmodel.schema.register( 'title', { isBlock: true, allowIn: '$root' } );\n\t\tmodel.schema.register( 'title-content', { isBlock: true, allowIn: 'title', allowAttributes: [ 'alignment' ] } );\n\t\tmodel.schema.extend( '$text', { allowIn: 'title-content' } );\n\n\t\t// Disallow all attributes in `title-content`.\n\t\tmodel.schema.addAttributeCheck( context => {\n\t\t\tif ( context.endsWith( 'title-content $text' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\t// Because `title` is represented by two elements in the model\n\t\t// but only one in the view, it is needed to adjust Mapper.\n\t\teditor.editing.mapper.on<MapperModelToViewPositionEvent>( 'modelToViewPosition', mapModelPositionToView( editor.editing.view ) );\n\t\teditor.data.mapper.on<MapperModelToViewPositionEvent>( 'modelToViewPosition', mapModelPositionToView( editor.editing.view ) );\n\n\t\t// Conversion.\n\t\teditor.conversion.for( 'downcast' ).elementToElement( { model: 'title-content', view: 'h1' } );\n\t\teditor.conversion.for( 'downcast' ).add( dispatcher => dispatcher.on<DowncastInsertEvent>(\n\t\t\t'insert:title',\n\t\t\t( evt, data, conversionApi ) => {\n\t\t\t\tconversionApi.consumable.consume( data.item, evt.name );\n\t\t\t}\n\t\t) );\n\n\t\t// Custom converter is used for data v -> m conversion to avoid calling post-fixer when setting data.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/2036.\n\t\teditor.data.upcastDispatcher.on<UpcastElementEvent>( 'element:h1', dataViewModelH1Insertion, { priority: 'high' } );\n\t\teditor.data.upcastDispatcher.on<UpcastElementEvent>( 'element:h2', dataViewModelH1Insertion, { priority: 'high' } );\n\t\teditor.data.upcastDispatcher.on<UpcastElementEvent>( 'element:h3', dataViewModelH1Insertion, { priority: 'high' } );\n\n\t\t// Take care about correct `title` element structure.\n\t\tmodel.document.registerPostFixer( writer => this._fixTitleContent( writer ) );\n\n\t\t// Create and take care of correct position of a `title` element.\n\t\tmodel.document.registerPostFixer( writer => this._fixTitleElement( writer ) );\n\n\t\t// Create element for `Body` placeholder if it is missing.\n\t\tmodel.document.registerPostFixer( writer => this._fixBodyElement( writer ) );\n\n\t\t// Prevent from adding extra at the end of the document.\n\t\tmodel.document.registerPostFixer( writer => this._fixExtraParagraph( writer ) );\n\n\t\t// Attach `Title` and `Body` placeholders to the empty title and/or content.\n\t\tthis._attachPlaceholders();\n\n\t\t// Attach Tab handling.\n\t\tthis._attachTabPressHandling();\n\t}\n\n\t/**\n\t * Returns the title of the document. Note that because this plugin does not allow any formatting inside\n\t * the title element, the output of this method will be a plain text, with no HTML tags.\n\t *\n\t * It is not recommended to use this method together with features that insert markers to the\n\t * data output, like comments or track changes features. If such markers start in the title and end in the\n\t * body, the result of this method might be incorrect.\n\t *\n\t * @param options Additional configuration passed to the conversion process.\n\t * See {@link module:engine/controller/datacontroller~DataController#get `DataController#get`}.\n\t * @returns The title of the document.\n\t */\n\tpublic getTitle( options: Record<string, unknown> = {} ): string {\n\t\tconst rootName = options.rootName ? options.rootName as string : undefined;\n\t\tconst titleElement = this._getTitleElement( rootName );\n\t\tconst titleContentElement = titleElement!.getChild( 0 ) as Element;\n\n\t\treturn this.editor.data.stringify( titleContentElement, options );\n\t}\n\n\t/**\n\t * Returns the body of the document.\n\t *\n\t * Note that it is not recommended to use this method together with features that insert markers to the\n\t * data output, like comments or track changes features. If such markers start in the title and end in the\n\t * body, the result of this method might be incorrect.\n\t *\n\t * @param options Additional configuration passed to the conversion process.\n\t * See {@link module:engine/controller/datacontroller~DataController#get `DataController#get`}.\n\t * @returns The body of the document.\n\t */\n\tpublic getBody( options: Record<string, unknown> = {} ): string {\n\t\tconst editor = this.editor;\n\t\tconst data = editor.data;\n\t\tconst model = editor.model;\n\t\tconst rootName = options.rootName ? options.rootName as string : undefined;\n\t\tconst root = editor.model.document.getRoot( rootName )!;\n\t\tconst view = editor.editing.view;\n\t\tconst viewWriter = new DowncastWriter( view.document );\n\n\t\tconst rootRange = model.createRangeIn( root );\n\t\tconst viewDocumentFragment = viewWriter.createDocumentFragment();\n\n\t\t// Find all markers that intersects with body.\n\t\tconst bodyStartPosition = model.createPositionAfter( root.getChild( 0 )! );\n\t\tconst bodyRange = model.createRange( bodyStartPosition, model.createPositionAt( root, 'end' ) );\n\n\t\tconst markers = new Map();\n\n\t\tfor ( const marker of model.markers ) {\n\t\t\tconst intersection = bodyRange.getIntersection( marker.getRange() );\n\n\t\t\tif ( intersection ) {\n\t\t\t\tmarkers.set( marker.name, intersection );\n\t\t\t}\n\t\t}\n\n\t\t// Convert the entire root to view.\n\t\tdata.mapper.clearBindings();\n\t\tdata.mapper.bindElements( root, viewDocumentFragment );\n\t\tdata.downcastDispatcher.convert( rootRange, markers, viewWriter, options );\n\n\t\t// Remove title element from view.\n\t\tviewWriter.remove( viewWriter.createRangeOn( viewDocumentFragment.getChild( 0 ) ) );\n\n\t\t// view -> data\n\t\treturn editor.data.processor.toData( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Returns the `title` element when it is in the document. Returns `undefined` otherwise.\n\t */\n\tprivate _getTitleElement( rootName?: string ): Element | undefined {\n\t\tconst root = this.editor.model.document.getRoot( rootName )!;\n\n\t\tfor ( const child of root.getChildren() as IterableIterator<Element> ) {\n\t\t\tif ( isTitle( child ) ) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Model post-fixer callback that ensures that `title` has only one `title-content` child.\n\t * All additional children should be moved after the `title` element and renamed to a paragraph.\n\t */\n\tprivate _fixTitleContent( writer: Writer ) {\n\t\tlet changed = false;\n\n\t\tfor ( const rootName of this.editor.model.document.getRootNames() ) {\n\t\t\tconst title = this._getTitleElement( rootName );\n\n\t\t\t// If there is no title in the content it will be created by `_fixTitleElement` post-fixer.\n\t\t\t// If the title has just one element, then it is correct. No fixing.\n\t\t\tif ( !title || title.maxOffset === 1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst titleChildren = Array.from( title.getChildren() ) as Array<Element>;\n\n\t\t\t// Skip first child because it is an allowed element.\n\t\t\ttitleChildren.shift();\n\n\t\t\tfor ( const titleChild of titleChildren ) {\n\t\t\t\twriter.move( writer.createRangeOn( titleChild ), title, 'after' );\n\t\t\t\twriter.rename( titleChild, 'paragraph' );\n\t\t\t}\n\n\t\t\tchanged = true;\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Model post-fixer callback that creates a title element when it is missing,\n\t * takes care of the correct position of it and removes additional title elements.\n\t */\n\tprivate _fixTitleElement( writer: Writer ) {\n\t\tlet changed = false;\n\t\tconst model = this.editor.model;\n\n\t\tfor ( const modelRoot of this.editor.model.document.getRoots() ) {\n\t\t\tconst titleElements = Array.from( modelRoot.getChildren() as IterableIterator<Element> ).filter( isTitle );\n\t\t\tconst firstTitleElement = titleElements[ 0 ];\n\t\t\tconst firstRootChild = modelRoot.getChild( 0 ) as Element;\n\n\t\t\t// When title element is at the beginning of the document then try to fix additional title elements (if there are any).\n\t\t\tif ( firstRootChild.is( 'element', 'title' ) ) {\n\t\t\t\tif ( titleElements.length > 1 ) {\n\t\t\t\t\tfixAdditionalTitleElements( titleElements, writer, model );\n\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// When there is no title in the document and first element in the document cannot be changed\n\t\t\t// to the title then create an empty title element at the beginning of the document.\n\t\t\tif ( !firstTitleElement && !titleLikeElements.has( firstRootChild.name ) ) {\n\t\t\t\tconst title = writer.createElement( 'title' );\n\n\t\t\t\twriter.insert( title, modelRoot );\n\t\t\t\twriter.insertElement( 'title-content', title );\n\n\t\t\t\tchanged = true;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( titleLikeElements.has( firstRootChild.name ) ) {\n\t\t\t\t// Change the first element in the document to the title if it can be changed (is title-like).\n\t\t\t\tchangeElementToTitle( firstRootChild, writer, model );\n\t\t\t} else {\n\t\t\t\t// Otherwise, move the first occurrence of the title element to the beginning of the document.\n\t\t\t\twriter.move( writer.createRangeOn( firstTitleElement ), modelRoot, 0 );\n\t\t\t}\n\n\t\t\tfixAdditionalTitleElements( titleElements, writer, model );\n\n\t\t\tchanged = true;\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Model post-fixer callback that adds an empty paragraph at the end of the document\n\t * when it is needed for the placeholder purposes.\n\t */\n\tprivate _fixBodyElement( writer: Writer ) {\n\t\tlet changed = false;\n\n\t\tfor ( const rootName of this.editor.model.document.getRootNames() ) {\n\t\t\tconst modelRoot = this.editor.model.document.getRoot( rootName )!;\n\n\t\t\tif ( modelRoot.childCount < 2 ) {\n\t\t\t\tconst placeholder = writer.createElement( 'paragraph' );\n\n\t\t\t\twriter.insert( placeholder, modelRoot, 1 );\n\t\t\t\tthis._bodyPlaceholder.set( rootName, placeholder );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Model post-fixer callback that removes a paragraph from the end of the document\n\t * if it was created for the placeholder purposes and is not needed anymore.\n\t */\n\tprivate _fixExtraParagraph( writer: Writer ) {\n\t\tlet changed = false;\n\n\t\tfor ( const rootName of this.editor.model.document.getRootNames() ) {\n\t\t\tconst root = this.editor.model.document.getRoot( rootName )!;\n\t\t\tconst placeholder = this._bodyPlaceholder.get( rootName )!;\n\n\t\t\tif ( shouldRemoveLastParagraph( placeholder, root ) ) {\n\t\t\t\tthis._bodyPlaceholder.delete( rootName );\n\t\t\t\twriter.remove( placeholder );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Attaches the `Title` and `Body` placeholders to the title and/or content.\n\t */\n\tprivate _attachPlaceholders() {\n\t\tconst editor: Editor & Partial<ElementApi> = this.editor;\n\t\tconst t = editor.t;\n\t\tconst view = editor.editing.view;\n\t\tconst sourceElement = editor.sourceElement;\n\n\t\tconst titlePlaceholder = editor.config.get( 'title.placeholder' ) || t( 'Type your title' );\n\t\tconst bodyPlaceholder = editor.config.get( 'placeholder' ) ||\n\t\t\tsourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute( 'placeholder' ) ||\n\t\t\tt( 'Type or paste your content here.' );\n\n\t\t// Attach placeholder to the view title element.\n\t\teditor.editing.downcastDispatcher.on<DowncastInsertEvent<Element>>( 'insert:title-content', ( evt, data, conversionApi ) => {\n\t\t\tconst element: PlaceholderableElement = conversionApi.mapper.toViewElement( data.item )!;\n\n\t\t\telement.placeholder = titlePlaceholder;\n\n\t\t\tenablePlaceholder( {\n\t\t\t\tview,\n\t\t\t\telement,\n\t\t\t\tkeepOnFocus: true\n\t\t\t} );\n\t\t} );\n\n\t\t// Attach placeholder to first element after a title element and remove it if it's not needed anymore.\n\t\t// First element after title can change, so we need to observe all changes keep placeholder in sync.\n\t\tconst bodyViewElements = new Map<string, ViewElement>();\n\n\t\t// This post-fixer runs after the model post-fixer, so we can assume that the second child in view root will always exist.\n\t\tview.document.registerPostFixer( writer => {\n\t\t\tlet hasChanged = false;\n\n\t\t\tfor ( const viewRoot of view.document.roots ) {\n\t\t\t\t// `viewRoot` can be empty despite the model post-fixers if the model root was detached.\n\t\t\t\tif ( viewRoot.isEmpty ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// If `viewRoot` is not empty, then we can expect at least two elements in it.\n\t\t\t\tconst body = viewRoot!.getChild( 1 ) as ViewElement;\n\t\t\t\tconst oldBody = bodyViewElements.get( viewRoot.rootName );\n\n\t\t\t\t// If body element has changed we need to disable placeholder on the previous element and enable on the new one.\n\t\t\t\tif ( body !== oldBody ) {\n\t\t\t\t\tif ( oldBody ) {\n\t\t\t\t\t\thidePlaceholder( writer, oldBody );\n\t\t\t\t\t\twriter.removeAttribute( 'data-placeholder', oldBody );\n\t\t\t\t\t}\n\n\t\t\t\t\twriter.setAttribute( 'data-placeholder', bodyPlaceholder, body );\n\t\t\t\t\tbodyViewElements.set( viewRoot.rootName, body );\n\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\n\t\t\t\t// Then we need to display placeholder if it is needed.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/8689.\n\t\t\t\tif ( needsPlaceholder( body, true ) && viewRoot!.childCount === 2 && body!.name === 'p' ) {\n\t\t\t\t\thasChanged = showPlaceholder( writer, body ) ? true : hasChanged;\n\t\t\t\t} else {\n\t\t\t\t\t// Or hide if it is not needed.\n\t\t\t\t\thasChanged = hidePlaceholder( writer, body ) ? true : hasChanged;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn hasChanged;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates navigation between the title and body sections using <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keys.\n\t */\n\tprivate _attachTabPressHandling() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\t// Pressing <kbd>Tab</kbd> inside the title should move the caret to the body.\n\t\teditor.keystrokes.set( 'TAB', ( data, cancel ) => {\n\t\t\tmodel.change( writer => {\n\t\t\t\tconst selection = model.document.selection;\n\t\t\t\tconst selectedElements = Array.from( selection.getSelectedBlocks() );\n\n\t\t\t\tif ( selectedElements.length === 1 && selectedElements[ 0 ].is( 'element', 'title-content' ) ) {\n\t\t\t\t\tconst root = selection.getFirstPosition()!.root;\n\t\t\t\t\tconst firstBodyElement = root.getChild( 1 );\n\n\t\t\t\t\twriter.setSelection( firstBodyElement!, 0 );\n\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Pressing <kbd>Shift</kbd>+<kbd>Tab</kbd> at the beginning of the body should move the caret to the title.\n\t\teditor.keystrokes.set( 'SHIFT + TAB', ( data, cancel ) => {\n\t\t\tmodel.change( writer => {\n\t\t\t\tconst selection = model.document.selection;\n\n\t\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst selectedElement = first( selection.getSelectedBlocks() );\n\t\t\t\tconst selectionPosition = selection.getFirstPosition()!;\n\t\t\t\tconst root = editor.model.document.getRoot( selectionPosition.root.rootName! )!;\n\n\t\t\t\tconst title = root.getChild( 0 ) as Element;\n\t\t\t\tconst body = root.getChild( 1 );\n\n\t\t\t\tif ( selectedElement === body && selectionPosition.isAtStart ) {\n\t\t\t\t\twriter.setSelection( title.getChild( 0 )!, 0 );\n\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n/**\n * A view-to-model converter for the h1 that appears at the beginning of the document (a title element).\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param evt An object containing information about the fired event.\n * @param data An object containing conversion input, a placeholder for conversion output and possibly other values.\n * @param conversionApi Conversion interface to be used by the callback.\n */\nfunction dataViewModelH1Insertion( evt: unknown, data: UpcastConversionData<ViewElement>, conversionApi: UpcastConversionApi ) {\n\tconst modelCursor = data.modelCursor;\n\tconst viewItem = data.viewItem;\n\n\tif ( !modelCursor.isAtStart || !modelCursor.parent.is( 'element', '$root' ) ) {\n\t\treturn;\n\t}\n\n\tif ( !conversionApi.consumable.consume( viewItem, { name: true } ) ) {\n\t\treturn;\n\t}\n\n\tconst modelWriter = conversionApi.writer;\n\n\tconst title = modelWriter.createElement( 'title' );\n\tconst titleContent = modelWriter.createElement( 'title-content' );\n\n\tmodelWriter.append( titleContent, title );\n\tmodelWriter.insert( title, modelCursor );\n\n\tconversionApi.convertChildren( viewItem, titleContent );\n\n\tconversionApi.updateConversionResult( title, data );\n}\n\n/**\n * Maps position from the beginning of the model `title` element to the beginning of the view `h1` element.\n *\n * ```html\n * <title>^<title-content>Foo</title-content></title> -> <h1>^Foo</h1>\n * ```\n */\nfunction mapModelPositionToView( editingView: EditingView ): GetCallback<MapperModelToViewPositionEvent> {\n\treturn ( evt, data ) => {\n\t\tconst positionParent = data.modelPosition.parent;\n\n\t\tif ( !positionParent.is( 'element', 'title' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelTitleElement = positionParent.parent as Element;\n\t\tconst viewElement = data.mapper.toViewElement( modelTitleElement )!;\n\n\t\tdata.viewPosition = editingView.createPositionAt( viewElement, 0 );\n\t\tevt.stop();\n\t};\n}\n\n/**\n * @returns Returns true when given element is a title. Returns false otherwise.\n */\nfunction isTitle( element: Element ) {\n\treturn element.is( 'element', 'title' );\n}\n\n/**\n * Changes the given element to the title element.\n */\nfunction changeElementToTitle( element: Element, writer: Writer, model: Model ) {\n\tconst title = writer.createElement( 'title' );\n\n\twriter.insert( title, element, 'before' );\n\twriter.insert( element, title, 0 );\n\twriter.rename( element, 'title-content' );\n\tmodel.schema.removeDisallowedAttributes( [ element ], writer );\n}\n\n/**\n * Loops over the list of title elements and fixes additional ones.\n *\n * @returns Returns true when there was any change. Returns false otherwise.\n */\nfunction fixAdditionalTitleElements( titleElements: Array<Element>, writer: Writer, model: Model ) {\n\tlet hasChanged = false;\n\n\tfor ( const title of titleElements ) {\n\t\tif ( title.index !== 0 ) {\n\t\t\tfixTitleElement( title, writer, model );\n\n\t\t\thasChanged = true;\n\t\t}\n\t}\n\n\treturn hasChanged;\n}\n\n/**\n * Changes given title element to a paragraph or removes it when it is empty.\n */\nfunction fixTitleElement( title: Element, writer: Writer, model: Model ) {\n\tconst child = title.getChild( 0 ) as Element;\n\n\t// Empty title should be removed.\n\t// It is created as a result of pasting to the title element.\n\tif ( child.isEmpty ) {\n\t\twriter.remove( title );\n\n\t\treturn;\n\t}\n\n\twriter.move( writer.createRangeOn( child ), title, 'before' );\n\twriter.rename( child, 'paragraph' );\n\twriter.remove( title );\n\tmodel.schema.removeDisallowedAttributes( [ child ], writer );\n}\n\n/**\n * Returns true when the last paragraph in the document was created only for the placeholder\n * purpose and it's not needed anymore. Returns false otherwise.\n */\nfunction shouldRemoveLastParagraph( placeholder: Element, root: RootElement ) {\n\tif ( !placeholder || !placeholder.is( 'element', 'paragraph' ) || placeholder.childCount ) {\n\t\treturn false;\n\t}\n\n\tif ( root.childCount <= 2 || root.getChild( root.childCount - 1 ) !== placeholder ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * The configuration of the {@link module:heading/title~Title title feature}.\n *\n * ```ts\n * ClassicEditor\n *   .create( document.querySelector( '#editor' ), {\n *     plugins: [ Title, ... ],\n *     title: {\n *       placeholder: 'My custom placeholder for the title'\n *     },\n *     placeholder: 'My custom placeholder for the body'\n *   } )\n *   .then( ... )\n *   .catch( ... );\n * ```\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor configuration options}.\n */\nexport interface TitleConfig {\n\n\t/**\n\t * Defines a custom value of the placeholder for the title field.\n\t *\n\t * Read more in {@link module:heading/title~TitleConfig}.\n\t */\n\tplaceholder?: string;\n}\n"]}