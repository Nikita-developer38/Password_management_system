{"version":3,"sources":["index.js","../src/highlightcommand.ts","../src/highlightediting.ts","../src/highlightui.ts","../src/highlight.ts"],"names":["HighlightCommand","Command","refresh","model","editor","doc","document","value","selection","getAttribute","isEnabled","schema","checkAttributeInSelection","execute","options","highlighter","change","writer","isCollapsed","position","getFirstPosition","hasAttribute","isSameHighlight","item","highlightStart","getLastMatchingPosition","direction","highlightEnd","highlightRange","createRange","isEqual","removeAttribute","removeSelectionAttribute","setAttribute","setSelectionAttribute","ranges","getValidRanges","getRanges","range","HighlightEditing","Plugin","pluginName","init","extend","allowAttributes","config","get","conversion","attributeToElement","_buildDefinition","commands","add","constructor","define","class","title","color","type","definition","key","values","view","option","push","name","classes","HighlightUI","localizedOptionTitles","t","_addHighlighterButton","_addRemoveHighlightButton","_addDropdown","_addMenuBarButton","command","_addButton","icons","eraser","button","bind","to","getIconForType","decorateHighlightButton","iconView","fillColor","isToggleable","label","icon","decorateButton","ui","componentFactory","locale","buttonView","ButtonView","localized","set","tooltip","on","editing","focus","startingHighlighter","optionsMap","reduce","retVal","dropdownView","createDropdown","SplitButtonView","splitButtonView","lastExecuted","commandValue","getActiveOption","delegate","buttonsCreator","buttons","map","create","listenTo","ToolbarSeparatorView","addToolbarToDropdown","enableActiveItemFocusOnDropdownOpen","ariaLabel","bindToolbarIconStyleToActiveColor","current","whichHighlighter","menuView","MenuBarMenuView","listView","MenuBarMenuListView","listItemView","MenuBarMenuListItemView","MenuBarMenuListItemButtonView","children","items","ListSeparatorView","panelView","actionView","markerIcon","penIcon","Highlight","requires"],"mappings":"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AAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,G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","file":"index.js.map","sourcesContent":["import { Command, Plugin, icons } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { ButtonView, createDropdown, SplitButtonView, addToolbarToDropdown, MenuBarMenuView, MenuBarMenuListView, MenuBarMenuListItemView, MenuBarMenuListItemButtonView, ListSeparatorView, ToolbarSeparatorView } from '@ckeditor/ckeditor5-ui/dist/index.js';\n\nclass HighlightCommand extends Command {\n    /**\n     * @inheritDoc\n     */ refresh() {\n        const model = this.editor.model;\n        const doc = model.document;\n        this.value = doc.selection.getAttribute('highlight');\n        this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, 'highlight');\n    }\n    /**\n     * Executes the command.\n     *\n     * @param options Options for the executed command.\n     * @param options.value The value to apply.\n     *\n     * @fires execute\n     */ execute(options = {}) {\n        const model = this.editor.model;\n        const document = model.document;\n        const selection = document.selection;\n        const highlighter = options.value;\n        model.change((writer)=>{\n            if (selection.isCollapsed) {\n                const position = selection.getFirstPosition();\n                // When selection is inside text with `highlight` attribute.\n                if (selection.hasAttribute('highlight')) {\n                    // Find the full highlighted range.\n                    const isSameHighlight = (value)=>{\n                        return value.item.hasAttribute('highlight') && value.item.getAttribute('highlight') === this.value;\n                    };\n                    const highlightStart = position.getLastMatchingPosition(isSameHighlight, {\n                        direction: 'backward'\n                    });\n                    const highlightEnd = position.getLastMatchingPosition(isSameHighlight);\n                    const highlightRange = writer.createRange(highlightStart, highlightEnd);\n                    // Then depending on current value...\n                    if (!highlighter || this.value === highlighter) {\n                        // ...remove attribute when passing highlighter different then current or executing \"eraser\".\n                        // If we're at the end of the highlighted range, we don't want to remove highlight of the range.\n                        if (!position.isEqual(highlightEnd)) {\n                            writer.removeAttribute('highlight', highlightRange);\n                        }\n                        writer.removeSelectionAttribute('highlight');\n                    } else {\n                        // ...update `highlight` value.\n                        // If we're at the end of the highlighted range, we don't want to change the highlight of the range.\n                        if (!position.isEqual(highlightEnd)) {\n                            writer.setAttribute('highlight', highlighter, highlightRange);\n                        }\n                        writer.setSelectionAttribute('highlight', highlighter);\n                    }\n                } else if (highlighter) {\n                    writer.setSelectionAttribute('highlight', highlighter);\n                }\n            } else {\n                const ranges = model.schema.getValidRanges(selection.getRanges(), 'highlight');\n                for (const range of ranges){\n                    if (highlighter) {\n                        writer.setAttribute('highlight', highlighter, range);\n                    } else {\n                        writer.removeAttribute('highlight', range);\n                    }\n                }\n            }\n        });\n    }\n}\n\nclass HighlightEditing extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'HighlightEditing';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        // Allow highlight attribute on text nodes.\n        editor.model.schema.extend('$text', {\n            allowAttributes: 'highlight'\n        });\n        const options = editor.config.get('highlight.options');\n        // Set-up the two-way conversion.\n        editor.conversion.attributeToElement(_buildDefinition(options));\n        editor.commands.add('highlight', new HighlightCommand(editor));\n    }\n    /**\n     * @inheritDoc\n     */ constructor(editor){\n        super(editor);\n        editor.config.define('highlight', {\n            options: [\n                {\n                    model: 'yellowMarker',\n                    class: 'marker-yellow',\n                    title: 'Yellow marker',\n                    color: 'var(--ck-highlight-marker-yellow)',\n                    type: 'marker'\n                },\n                {\n                    model: 'greenMarker',\n                    class: 'marker-green',\n                    title: 'Green marker',\n                    color: 'var(--ck-highlight-marker-green)',\n                    type: 'marker'\n                },\n                {\n                    model: 'pinkMarker',\n                    class: 'marker-pink',\n                    title: 'Pink marker',\n                    color: 'var(--ck-highlight-marker-pink)',\n                    type: 'marker'\n                },\n                {\n                    model: 'blueMarker',\n                    class: 'marker-blue',\n                    title: 'Blue marker',\n                    color: 'var(--ck-highlight-marker-blue)',\n                    type: 'marker'\n                },\n                {\n                    model: 'redPen',\n                    class: 'pen-red',\n                    title: 'Red pen',\n                    color: 'var(--ck-highlight-pen-red)',\n                    type: 'pen'\n                },\n                {\n                    model: 'greenPen',\n                    class: 'pen-green',\n                    title: 'Green pen',\n                    color: 'var(--ck-highlight-pen-green)',\n                    type: 'pen'\n                }\n            ]\n        });\n    }\n}\n/**\n * Converts the options array to a converter definition.\n *\n * @param options An array with configured options.\n */ function _buildDefinition(options) {\n    const definition = {\n        model: {\n            key: 'highlight',\n            values: []\n        },\n        view: {}\n    };\n    for (const option of options){\n        definition.model.values.push(option.model);\n        definition.view[option.model] = {\n            name: 'mark',\n            classes: option.class\n        };\n    }\n    return definition;\n}\n\nvar markerIcon = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M10.798 1.59 3.002 12.875l1.895 1.852 2.521 1.402 6.997-12.194z\\\"/><path d=\\\"m2.556 16.727.234-.348c-.297-.151-.462-.293-.498-.426-.036-.137.002-.416.115-.837.094-.25.15-.449.169-.595a4.495 4.495 0 0 0 0-.725c-.209-.621-.303-1.041-.284-1.26.02-.218.178-.506.475-.862l6.77-9.414c.539-.91 1.605-.85 3.199.18 1.594 1.032 2.188 1.928 1.784 2.686l-5.877 10.36c-.158.412-.333.673-.526.782-.193.108-.604.179-1.232.21-.362.131-.608.237-.738.318-.13.081-.305.238-.526.47-.293.265-.504.397-.632.397-.096 0-.27-.075-.524-.226l-.31.41-1.6-1.12zm-.279.415 1.575 1.103-.392.515H1.19l1.087-1.618zm8.1-13.656-4.953 6.9L8.75 12.57l4.247-7.574c.175-.25-.188-.647-1.092-1.192-.903-.546-1.412-.652-1.528-.32zM8.244 18.5 9.59 17h9.406v1.5H8.245z\\\"/></svg>\";\n\nvar penIcon = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M10.126 2.268 2.002 13.874l1.895 1.852 2.521 1.402L14.47 5.481l-1.543-2.568-2.801-.645z\\\"/><path d=\\\"m4.5 18.088-2.645-1.852-.04-2.95-.006-.005.006-.008v-.025l.011.008L8.73 2.97c.165-.233.356-.417.567-.557l-1.212.308L4.604 7.9l-.83-.558 3.694-5.495 2.708-.69 1.65 1.145.046.018.85-1.216 2.16 1.512-.856 1.222c.828.967 1.144 2.141.432 3.158L7.55 17.286l.006.005-3.055.797H4.5zm-.634.166-1.976.516-.026-1.918 2.002 1.402zM9.968 3.817l-.006-.004-6.123 9.184 3.277 2.294 6.108-9.162.005.003c.317-.452-.16-1.332-1.064-1.966-.891-.624-1.865-.776-2.197-.349zM8.245 18.5 9.59 17h9.406v1.5H8.245z\\\"/></svg>\";\n\nclass HighlightUI extends Plugin {\n    /**\n     * Returns the localized option titles provided by the plugin.\n     *\n     * The following localized titles corresponding with default\n     * {@link module:highlight/highlightconfig~HighlightConfig#options} are available:\n     *\n     * * `'Yellow marker'`,\n     * * `'Green marker'`,\n     * * `'Pink marker'`,\n     * * `'Blue marker'`,\n     * * `'Red pen'`,\n     * * `'Green pen'`.\n     */ get localizedOptionTitles() {\n        const t = this.editor.t;\n        return {\n            'Yellow marker': t('Yellow marker'),\n            'Green marker': t('Green marker'),\n            'Pink marker': t('Pink marker'),\n            'Blue marker': t('Blue marker'),\n            'Red pen': t('Red pen'),\n            'Green pen': t('Green pen')\n        };\n    }\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'HighlightUI';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const options = this.editor.config.get('highlight.options');\n        for (const option of options){\n            this._addHighlighterButton(option);\n        }\n        this._addRemoveHighlightButton();\n        this._addDropdown(options);\n        this._addMenuBarButton(options);\n    }\n    /**\n     * Creates the \"Remove highlight\" button.\n     */ _addRemoveHighlightButton() {\n        const t = this.editor.t;\n        const command = this.editor.commands.get('highlight');\n        this._addButton('removeHighlight', t('Remove highlight'), icons.eraser, null, (button)=>{\n            button.bind('isEnabled').to(command, 'isEnabled');\n        });\n    }\n    /**\n     * Creates a toolbar button from the provided highlight option.\n     */ _addHighlighterButton(option) {\n        const command = this.editor.commands.get('highlight');\n        // TODO: change naming\n        this._addButton('highlight:' + option.model, option.title, getIconForType(option.type), option.model, decorateHighlightButton);\n        function decorateHighlightButton(button) {\n            button.bind('isEnabled').to(command, 'isEnabled');\n            button.bind('isOn').to(command, 'value', (value)=>value === option.model);\n            button.iconView.fillColor = option.color;\n            button.isToggleable = true;\n        }\n    }\n    /**\n     * Internal method for creating highlight buttons.\n     *\n     * @param name The name of the button.\n     * @param label The label for the button.\n     * @param icon The button icon.\n     * @param value The `value` property passed to the executed command.\n     * @param decorateButton A callback getting ButtonView instance so that it can be further customized.\n     */ _addButton(name, label, icon, value, decorateButton) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(name, (locale)=>{\n            const buttonView = new ButtonView(locale);\n            const localized = this.localizedOptionTitles[label] ? this.localizedOptionTitles[label] : label;\n            buttonView.set({\n                label: localized,\n                icon,\n                tooltip: true\n            });\n            buttonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value\n                });\n                editor.editing.view.focus();\n            });\n            // Add additional behavior for buttonView.\n            decorateButton(buttonView);\n            return buttonView;\n        });\n    }\n    /**\n     * Creates the split button dropdown UI from the provided highlight options.\n     */ _addDropdown(options) {\n        const editor = this.editor;\n        const t = editor.t;\n        const componentFactory = editor.ui.componentFactory;\n        const startingHighlighter = options[0];\n        const optionsMap = options.reduce((retVal, option)=>{\n            retVal[option.model] = option;\n            return retVal;\n        }, {});\n        componentFactory.add('highlight', (locale)=>{\n            const command = editor.commands.get('highlight');\n            const dropdownView = createDropdown(locale, SplitButtonView);\n            const splitButtonView = dropdownView.buttonView;\n            splitButtonView.set({\n                label: t('Highlight'),\n                tooltip: true,\n                // Holds last executed highlighter.\n                lastExecuted: startingHighlighter.model,\n                // Holds current highlighter to execute (might be different then last used).\n                commandValue: startingHighlighter.model,\n                isToggleable: true\n            });\n            // Dropdown button changes to selection (command.value):\n            // - If selection is in highlight it get active highlight appearance (icon, color) and is activated.\n            // - Otherwise it gets appearance (icon, color) of last executed highlight.\n            splitButtonView.bind('icon').to(command, 'value', (value)=>getIconForType(getActiveOption(value, 'type')));\n            splitButtonView.bind('color').to(command, 'value', (value)=>getActiveOption(value, 'color'));\n            splitButtonView.bind('commandValue').to(command, 'value', (value)=>getActiveOption(value, 'model'));\n            splitButtonView.bind('isOn').to(command, 'value', (value)=>!!value);\n            splitButtonView.delegate('execute').to(dropdownView);\n            // Create buttons array.\n            const buttonsCreator = ()=>{\n                const buttons = options.map((option)=>{\n                    // Get existing highlighter button.\n                    const buttonView = componentFactory.create('highlight:' + option.model);\n                    // Update lastExecutedHighlight on execute.\n                    this.listenTo(buttonView, 'execute', ()=>{\n                        dropdownView.buttonView.set({\n                            lastExecuted: option.model\n                        });\n                    });\n                    return buttonView;\n                });\n                // Add separator and eraser buttons to dropdown.\n                buttons.push(new ToolbarSeparatorView());\n                buttons.push(componentFactory.create('removeHighlight'));\n                return buttons;\n            };\n            // Make toolbar button enabled when any button in dropdown is enabled before adding separator and eraser.\n            dropdownView.bind('isEnabled').to(command, 'isEnabled');\n            addToolbarToDropdown(dropdownView, buttonsCreator, {\n                enableActiveItemFocusOnDropdownOpen: true,\n                ariaLabel: t('Text highlight toolbar')\n            });\n            bindToolbarIconStyleToActiveColor(dropdownView);\n            // Execute current action from dropdown's split button action button.\n            splitButtonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value: splitButtonView.commandValue\n                });\n            });\n            // Focus the editable after executing the command.\n            // It overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n            this.listenTo(dropdownView, 'execute', ()=>{\n                editor.editing.view.focus();\n            });\n            /**\n             * Returns active highlighter option depending on current command value.\n             * If current is not set or it is the same as last execute this method will return the option key (like icon or color)\n             * of last executed highlighter. Otherwise it will return option key for current one.\n             */ function getActiveOption(current, key) {\n                const whichHighlighter = !current || current === splitButtonView.lastExecuted ? splitButtonView.lastExecuted : current;\n                return optionsMap[whichHighlighter][key];\n            }\n            return dropdownView;\n        });\n    }\n    /**\n     * Creates the menu bar button for highlight including submenu with available options.\n     */ _addMenuBarButton(options) {\n        const editor = this.editor;\n        const t = editor.t;\n        editor.ui.componentFactory.add('menuBar:highlight', (locale)=>{\n            const command = editor.commands.get('highlight');\n            const menuView = new MenuBarMenuView(locale);\n            menuView.buttonView.set({\n                label: t('Highlight'),\n                icon: getIconForType('marker')\n            });\n            menuView.bind('isEnabled').to(command);\n            menuView.buttonView.iconView.fillColor = 'transparent';\n            const listView = new MenuBarMenuListView(locale);\n            for (const option of options){\n                const listItemView = new MenuBarMenuListItemView(locale, menuView);\n                const buttonView = new MenuBarMenuListItemButtonView(locale);\n                buttonView.set({\n                    label: option.title,\n                    icon: getIconForType(option.type)\n                });\n                buttonView.delegate('execute').to(menuView);\n                buttonView.bind('isOn').to(command, 'value', (value)=>value === option.model);\n                buttonView.bind('ariaChecked').to(buttonView, 'isOn');\n                buttonView.iconView.bind('fillColor').to(buttonView, 'isOn', (value)=>value ? 'transparent' : option.color);\n                buttonView.on('execute', ()=>{\n                    editor.execute('highlight', {\n                        value: option.model\n                    });\n                    editor.editing.view.focus();\n                });\n                listItemView.children.add(buttonView);\n                listView.items.add(listItemView);\n            }\n            // Add remove highlight button\n            listView.items.add(new ListSeparatorView(locale));\n            const listItemView = new MenuBarMenuListItemView(locale, menuView);\n            const buttonView = new MenuBarMenuListItemButtonView(locale);\n            buttonView.set({\n                label: t('Remove highlight'),\n                icon: icons.eraser\n            });\n            buttonView.delegate('execute').to(menuView);\n            buttonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value: null\n                });\n                editor.editing.view.focus();\n            });\n            listItemView.children.add(buttonView);\n            listView.items.add(listItemView);\n            menuView.panelView.children.add(listView);\n            return menuView;\n        });\n    }\n}\n/**\n * Extends split button icon style to reflect last used button style.\n */ function bindToolbarIconStyleToActiveColor(dropdownView) {\n    const actionView = dropdownView.buttonView.actionView;\n    actionView.iconView.bind('fillColor').to(dropdownView.buttonView, 'color');\n}\n/**\n * Returns icon for given highlighter type.\n */ function getIconForType(type) {\n    return type === 'marker' ? markerIcon : penIcon;\n}\n\nclass Highlight extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get requires() {\n        return [\n            HighlightEditing,\n            HighlightUI\n        ];\n    }\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'Highlight';\n    }\n}\n\nexport { Highlight, HighlightEditing, HighlightUI };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\nimport type { TreeWalkerValue } from 'ckeditor5/src/engine.js';\n\n/**\n * The highlight command. It is used by the {@link module:highlight/highlightediting~HighlightEditing highlight feature}\n * to apply the text highlighting.\n *\n * ```ts\n * editor.execute( 'highlight', { value: 'greenMarker' } );\n * ```\n *\n * **Note**: Executing the command without a value removes the attribute from the model. If the selection is collapsed\n * inside a text with the highlight attribute, the command will remove the attribute from the entire range\n * of that text.\n */\nexport default class HighlightCommand extends Command {\n\t/**\n\t * A value indicating whether the command is active. If the selection has some highlight attribute,\n\t * it corresponds to the value of that attribute.\n\t *\n\t * @observable\n\t * @readonly\n\t */\n\tdeclare public value: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( 'highlight' ) as string | undefined;\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'highlight' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @param options Options for the executed command.\n\t * @param options.value The value to apply.\n\t *\n\t * @fires execute\n\t */\n\tpublic override execute( options: { value?: string | null } = {} ): void {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst highlighter = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition()!;\n\n\t\t\t\t// When selection is inside text with `highlight` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'highlight' ) ) {\n\t\t\t\t\t// Find the full highlighted range.\n\t\t\t\t\tconst isSameHighlight = ( value: TreeWalkerValue ) => {\n\t\t\t\t\t\treturn value.item.hasAttribute( 'highlight' ) && value.item.getAttribute( 'highlight' ) === this.value;\n\t\t\t\t\t};\n\n\t\t\t\t\tconst highlightStart = position.getLastMatchingPosition( isSameHighlight, { direction: 'backward' } );\n\t\t\t\t\tconst highlightEnd = position.getLastMatchingPosition( isSameHighlight );\n\n\t\t\t\t\tconst highlightRange = writer.createRange( highlightStart, highlightEnd );\n\n\t\t\t\t\t// Then depending on current value...\n\t\t\t\t\tif ( !highlighter || this.value === highlighter ) {\n\t\t\t\t\t\t// ...remove attribute when passing highlighter different then current or executing \"eraser\".\n\n\t\t\t\t\t\t// If we're at the end of the highlighted range, we don't want to remove highlight of the range.\n\t\t\t\t\t\tif ( !position.isEqual( highlightEnd ) ) {\n\t\t\t\t\t\t\twriter.removeAttribute( 'highlight', highlightRange );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriter.removeSelectionAttribute( 'highlight' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ...update `highlight` value.\n\n\t\t\t\t\t\t// If we're at the end of the highlighted range, we don't want to change the highlight of the range.\n\t\t\t\t\t\tif ( !position.isEqual( highlightEnd ) ) {\n\t\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, highlightRange );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t\t}\n\t\t\t\t} else if ( highlighter ) {\n\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'highlight' );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( highlighter ) {\n\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( 'highlight', range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightediting\n */\n\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\n\nimport HighlightCommand from './highlightcommand.js';\nimport type { HighlightOption } from './highlightconfig.js';\n\n/**\n * The highlight editing feature. It introduces the {@link module:highlight/highlightcommand~HighlightCommand command} and the `highlight`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<mark>` element with a `class` attribute (`<mark class=\"marker-green\">...</mark>`) depending\n * on the {@link module:highlight/highlightconfig~HighlightConfig configuration}.\n */\nexport default class HighlightEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HighlightEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'highlight', {\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tmodel: 'yellowMarker',\n\t\t\t\t\tclass: 'marker-yellow',\n\t\t\t\t\ttitle: 'Yellow marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-yellow)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenMarker',\n\t\t\t\t\tclass: 'marker-green',\n\t\t\t\t\ttitle: 'Green marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-green)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'pinkMarker',\n\t\t\t\t\tclass: 'marker-pink',\n\t\t\t\t\ttitle: 'Pink marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'blueMarker',\n\t\t\t\t\tclass: 'marker-blue',\n\t\t\t\t\ttitle: 'Blue marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-blue)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'redPen',\n\t\t\t\t\tclass: 'pen-red',\n\t\t\t\t\ttitle: 'Red pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-red)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenPen',\n\t\t\t\t\tclass: 'pen-green',\n\t\t\t\t\ttitle: 'Green pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-green)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\t// Allow highlight attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'highlight' } );\n\n\t\tconst options = editor.config.get( 'highlight.options' )!;\n\n\t\t// Set-up the two-way conversion.\n\t\teditor.conversion.attributeToElement( _buildDefinition( options ) );\n\n\t\teditor.commands.add( 'highlight', new HighlightCommand( editor ) );\n\t}\n}\n\n/**\n * Converts the options array to a converter definition.\n *\n * @param options An array with configured options.\n */\nfunction _buildDefinition( options: Array<HighlightOption> ): HighlightConverterDefinition {\n\tconst definition: HighlightConverterDefinition = {\n\t\tmodel: {\n\t\t\tkey: 'highlight',\n\t\t\tvalues: []\n\t\t},\n\t\tview: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.model.values.push( option.model );\n\t\tdefinition.view[ option.model ] = {\n\t\t\tname: 'mark',\n\t\t\tclasses: option.class\n\t\t};\n\t}\n\n\treturn definition;\n}\n\ntype HighlightConverterDefinition = {\n\tmodel: { key: string; values: Array<string> };\n\tview: Record<string, { name: string; classes: string }>;\n};\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightui\n */\n\nimport { Plugin, icons } from 'ckeditor5/src/core.js';\nimport {\n\taddToolbarToDropdown,\n\tcreateDropdown,\n\tButtonView,\n\tListSeparatorView,\n\tMenuBarMenuView,\n\tMenuBarMenuListView,\n\tMenuBarMenuListItemView,\n\tMenuBarMenuListItemButtonView,\n\tSplitButtonView,\n\tToolbarSeparatorView,\n\ttype DropdownView\n} from 'ckeditor5/src/ui.js';\n\nimport markerIcon from './../theme/icons/marker.svg';\nimport penIcon from './../theme/icons/pen.svg';\nimport type { HighlightOption } from './highlightconfig.js';\nimport type HighlightCommand from './highlightcommand.js';\n\nimport './../theme/highlight.css';\n\n/**\n * The default highlight UI plugin. It introduces:\n *\n * * The `'highlight'` dropdown,\n * * The `'removeHighlight'` and `'highlight:*'` buttons.\n *\n * The default configuration includes the following buttons:\n *\n * * `'highlight:yellowMarker'`\n * * `'highlight:greenMarker'`\n * * `'highlight:pinkMarker'`\n * * `'highlight:blueMarker'`\n * * `'highlight:redPen'`\n * * `'highlight:greenPen'`\n *\n * See the {@link module:highlight/highlightconfig~HighlightConfig#options configuration} to learn more\n * about the defaults.\n */\nexport default class HighlightUI extends Plugin {\n\t/**\n\t * Returns the localized option titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with default\n\t * {@link module:highlight/highlightconfig~HighlightConfig#options} are available:\n\t *\n\t * * `'Yellow marker'`,\n\t * * `'Green marker'`,\n\t * * `'Pink marker'`,\n\t * * `'Blue marker'`,\n\t * * `'Red pen'`,\n\t * * `'Green pen'`.\n\t */\n\tpublic get localizedOptionTitles(): Record<string, string> {\n\t\tconst t = this.editor.t;\n\n\t\treturn {\n\t\t\t'Yellow marker': t( 'Yellow marker' ),\n\t\t\t'Green marker': t( 'Green marker' ),\n\t\t\t'Pink marker': t( 'Pink marker' ),\n\t\t\t'Blue marker': t( 'Blue marker' ),\n\t\t\t'Red pen': t( 'Red pen' ),\n\t\t\t'Green pen': t( 'Green pen' )\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HighlightUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst options = this.editor.config.get( 'highlight.options' )!;\n\n\t\tfor ( const option of options ) {\n\t\t\tthis._addHighlighterButton( option );\n\t\t}\n\n\t\tthis._addRemoveHighlightButton();\n\n\t\tthis._addDropdown( options );\n\n\t\tthis._addMenuBarButton( options );\n\t}\n\n\t/**\n\t * Creates the \"Remove highlight\" button.\n\t */\n\tprivate _addRemoveHighlightButton(): void {\n\t\tconst t = this.editor.t;\n\t\tconst command: HighlightCommand = this.editor.commands.get( 'highlight' )!;\n\n\t\tthis._addButton( 'removeHighlight', t( 'Remove highlight' ), icons.eraser, null, button => {\n\t\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a toolbar button from the provided highlight option.\n\t */\n\tprivate _addHighlighterButton( option: HighlightOption ) {\n\t\tconst command: HighlightCommand = this.editor.commands.get( 'highlight' )!;\n\n\t\t// TODO: change naming\n\t\tthis._addButton( 'highlight:' + option.model, option.title, getIconForType( option.type ), option.model, decorateHighlightButton );\n\n\t\tfunction decorateHighlightButton( button: ButtonView ) {\n\t\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\t\t\tbutton.iconView.fillColor = option.color;\n\t\t\tbutton.isToggleable = true;\n\t\t}\n\t}\n\n\t/**\n\t * Internal method for creating highlight buttons.\n\t *\n\t * @param name The name of the button.\n\t * @param label The label for the button.\n\t * @param icon The button icon.\n\t * @param value The `value` property passed to the executed command.\n\t * @param decorateButton A callback getting ButtonView instance so that it can be further customized.\n\t */\n\tprivate _addButton( name: string, label: string, icon: string, value: string | null, decorateButton: ( button: ButtonView ) => void ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tconst localized = this.localizedOptionTitles[ label ] ? this.localizedOptionTitles[ label ] : label;\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: localized,\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t// Add additional behavior for buttonView.\n\t\t\tdecorateButton( buttonView );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the split button dropdown UI from the provided highlight options.\n\t */\n\tprivate _addDropdown( options: Array<HighlightOption> ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\n\t\tconst startingHighlighter = options[ 0 ];\n\n\t\tconst optionsMap = options.reduce( ( retVal, option ) => {\n\t\t\tretVal[ option.model ] = option;\n\n\t\t\treturn retVal;\n\t\t}, {} as Record<string, HighlightOption> );\n\n\t\tcomponentFactory.add( 'highlight', locale => {\n\t\t\tconst command: HighlightCommand = editor.commands.get( 'highlight' )!;\n\t\t\tconst dropdownView = createDropdown( locale, SplitButtonView );\n\t\t\tconst splitButtonView = dropdownView.buttonView as HighlightSplitButtonView;\n\n\t\t\tsplitButtonView.set( {\n\t\t\t\tlabel: t( 'Highlight' ),\n\t\t\t\ttooltip: true,\n\t\t\t\t// Holds last executed highlighter.\n\t\t\t\tlastExecuted: startingHighlighter.model,\n\t\t\t\t// Holds current highlighter to execute (might be different then last used).\n\t\t\t\tcommandValue: startingHighlighter.model,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\t// Dropdown button changes to selection (command.value):\n\t\t\t// - If selection is in highlight it get active highlight appearance (icon, color) and is activated.\n\t\t\t// - Otherwise it gets appearance (icon, color) of last executed highlight.\n\t\t\tsplitButtonView.bind( 'icon' ).to( command, 'value', value => getIconForType( getActiveOption( value, 'type' ) ) );\n\t\t\tsplitButtonView.bind( 'color' ).to( command, 'value', value => getActiveOption( value, 'color' ) );\n\t\t\tsplitButtonView.bind( 'commandValue' ).to( command, 'value', value => getActiveOption( value, 'model' ) );\n\t\t\tsplitButtonView.bind( 'isOn' ).to( command, 'value', value => !!value );\n\n\t\t\tsplitButtonView.delegate( 'execute' ).to( dropdownView );\n\n\t\t\t// Create buttons array.\n\t\t\tconst buttonsCreator = () => {\n\t\t\t\tconst buttons = options.map( option => {\n\t\t\t\t\t// Get existing highlighter button.\n\t\t\t\t\tconst buttonView = componentFactory.create( 'highlight:' + option.model );\n\n\t\t\t\t\t// Update lastExecutedHighlight on execute.\n\t\t\t\t\tthis.listenTo( buttonView, 'execute', () => {\n\t\t\t\t\t\t( dropdownView.buttonView as HighlightSplitButtonView ).set( { lastExecuted: option.model } );\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn buttonView;\n\t\t\t\t} );\n\n\t\t\t\t// Add separator and eraser buttons to dropdown.\n\t\t\t\tbuttons.push( new ToolbarSeparatorView() );\n\t\t\t\tbuttons.push( componentFactory.create( 'removeHighlight' ) );\n\n\t\t\t\treturn buttons;\n\t\t\t};\n\n\t\t\t// Make toolbar button enabled when any button in dropdown is enabled before adding separator and eraser.\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\taddToolbarToDropdown( dropdownView, buttonsCreator, {\n\t\t\t\tenableActiveItemFocusOnDropdownOpen: true,\n\t\t\t\tariaLabel: t( 'Text highlight toolbar' )\n\t\t\t} );\n\t\t\tbindToolbarIconStyleToActiveColor( dropdownView );\n\n\t\t\t// Execute current action from dropdown's split button action button.\n\t\t\tsplitButtonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value: splitButtonView.commandValue } );\n\t\t\t} );\n\n\t\t\t// Focus the editable after executing the command.\n\t\t\t// It overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n\t\t\tthis.listenTo( dropdownView, 'execute', () => {\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t/**\n\t\t\t * Returns active highlighter option depending on current command value.\n\t\t\t * If current is not set or it is the same as last execute this method will return the option key (like icon or color)\n\t\t\t * of last executed highlighter. Otherwise it will return option key for current one.\n\t\t\t */\n\t\t\tfunction getActiveOption<Key extends keyof HighlightOption>( current: string | undefined, key: Key ): HighlightOption[ Key ] {\n\t\t\t\tconst whichHighlighter = !current ||\n\t\t\t\tcurrent === splitButtonView.lastExecuted ? splitButtonView.lastExecuted : current;\n\n\t\t\t\treturn optionsMap[ whichHighlighter! ][ key ];\n\t\t\t}\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the menu bar button for highlight including submenu with available options.\n\t */\n\tprivate _addMenuBarButton( options: Array<HighlightOption> ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'menuBar:highlight', locale => {\n\t\t\tconst command: HighlightCommand = editor.commands.get( 'highlight' )!;\n\t\t\tconst menuView = new MenuBarMenuView( locale );\n\n\t\t\tmenuView.buttonView.set( {\n\t\t\t\tlabel: t( 'Highlight' ),\n\t\t\t\ticon: getIconForType( 'marker' )\n\t\t\t} );\n\t\t\tmenuView.bind( 'isEnabled' ).to( command );\n\t\t\tmenuView.buttonView.iconView.fillColor = 'transparent';\n\n\t\t\tconst listView = new MenuBarMenuListView( locale );\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst listItemView = new MenuBarMenuListItemView( locale, menuView );\n\t\t\t\tconst buttonView = new MenuBarMenuListItemButtonView( locale );\n\n\t\t\t\tbuttonView.set( {\n\t\t\t\t\tlabel: option.title,\n\t\t\t\t\ticon: getIconForType( option.type )\n\t\t\t\t} );\n\n\t\t\t\tbuttonView.delegate( 'execute' ).to( menuView );\n\t\t\t\tbuttonView.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\t\t\t\tbuttonView.bind( 'ariaChecked' ).to( buttonView, 'isOn' );\n\t\t\t\tbuttonView.iconView.bind( 'fillColor' ).to( buttonView, 'isOn', value => value ? 'transparent' : option.color );\n\n\t\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\t\teditor.execute( 'highlight', { value: option.model } );\n\n\t\t\t\t\teditor.editing.view.focus();\n\t\t\t\t} );\n\n\t\t\t\tlistItemView.children.add( buttonView );\n\t\t\t\tlistView.items.add( listItemView );\n\t\t\t}\n\n\t\t\t// Add remove highlight button\n\t\t\tlistView.items.add( new ListSeparatorView( locale ) );\n\t\t\tconst listItemView = new MenuBarMenuListItemView( locale, menuView );\n\t\t\tconst buttonView = new MenuBarMenuListItemButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Remove highlight' ),\n\t\t\t\ticon: icons.eraser\n\t\t\t} );\n\n\t\t\tbuttonView.delegate( 'execute' ).to( menuView );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value: null } );\n\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\tlistItemView.children.add( buttonView );\n\t\t\tlistView.items.add( listItemView );\n\n\t\t\tmenuView.panelView.children.add( listView );\n\n\t\t\treturn menuView;\n\t\t} );\n\t}\n}\n\n/**\n * Extends split button icon style to reflect last used button style.\n */\nfunction bindToolbarIconStyleToActiveColor( dropdownView: DropdownView ): void {\n\tconst actionView = ( dropdownView.buttonView as HighlightSplitButtonView ).actionView;\n\n\tactionView.iconView.bind( 'fillColor' ).to( ( dropdownView.buttonView! as HighlightSplitButtonView ), 'color' );\n}\n\n/**\n * Returns icon for given highlighter type.\n */\nfunction getIconForType( type: 'marker' | 'pen' ) {\n\treturn type === 'marker' ? markerIcon : penIcon;\n}\n\ntype HighlightSplitButtonView = SplitButtonView & {\n\tlastExecuted: string;\n\tcommandValue: string;\n\tcolor: string;\n};\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlight\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport HighlightEditing from './highlightediting.js';\nimport HighlightUI from './highlightui.js';\n\n/**\n * The highlight plugin.\n *\n * For a detailed overview, check the {@glink features/highlight Highlight feature} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:highlight/highlightediting~HighlightEditing} and\n * {@link module:highlight/highlightui~HighlightUI} plugins.\n */\nexport default class Highlight extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ HighlightEditing, HighlightUI ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Highlight' as const;\n\t}\n}\n"]}