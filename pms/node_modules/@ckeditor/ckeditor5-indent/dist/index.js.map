{"version":3,"sources":["index.js","../src/indentediting.ts","../src/indentui.ts","../src/indent.ts","../src/indentblockcommand.ts","../src/indentcommandbehavior/indentusingoffset.ts","../src/indentcommandbehavior/indentusingclasses.ts","../src/indentblock.ts"],"names":["IndentEditing","Plugin","pluginName","init","editor","commands","add","MultiCommand","IndentUI","locale","t","localizedIndentIcon","uiLanguageDirection","icons","indent","outdent","localizedOutdentIcon","_defineButton","commandName","label","icon","ui","componentFactory","buttonView","_createButton","ButtonView","set","tooltip","MenuBarMenuListItemButtonView","ButtonClass","command","get","view","bind","to","listenTo","execute","editing","focus","Indent","requires","IndentBlockCommand","Command","refresh","model","block","first","document","selection","getSelectedBlocks","_isIndentationChangeAllowed","isEnabled","_indentBehavior","checkEnabled","getAttribute","blocksToChange","_getBlocksToChange","change","writer","currentIndent","nextIndent","getNextIndent","setAttribute","removeAttribute","blocksInSelection","Array","from","filter","element","schema","checkAttribute","plugins","has","isForward","documentListUtils","isListItemBlock","constructor","indentBehavior","IndentUsingOffset","indentAttributeValue","currentOffset","parseFloat","isSameUnit","endsWith","unit","offset","undefined","nextOffset","offsetToSet","config","direction","IndentUsingClasses","currentIndex","classes","indexOf","length","indexStep","DEFAULT_ELEMENTS","IndentBlock","configuration","_setupConversionUsingClasses","data","addStyleProcessorRules","addMarginRules","_setupConversionUsingOffset","afterInit","indentCommand","outdentCommand","options","configuredElements","map","option","knownElements","forEach","elementName","isRegistered","extend","allowAttributes","setAttributeProperties","isFormatting","registerChildCommand","conversion","marginProperty","contentLanguageDirection","for","attributeToAttribute","styles","key","value","viewElement","is","getStyle","modelAttributeValue","definition","values","className","push","define"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Plugin, MultiCommand, icons, Command } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { ButtonView, MenuBarMenuListItemButtonView } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { addMarginRules } from '@ckeditor/ckeditor5-engine/dist/index.js';\nimport { first } from '@ckeditor/ckeditor5-utils/dist/index.js';\n\nclass IndentEditing extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'IndentEditing';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        editor.commands.add('indent', new MultiCommand(editor));\n        editor.commands.add('outdent', new MultiCommand(editor));\n    }\n}\n\nclass IndentUI extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'IndentUI';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        const locale = editor.locale;\n        const t = editor.t;\n        const localizedIndentIcon = locale.uiLanguageDirection == 'ltr' ? icons.indent : icons.outdent;\n        const localizedOutdentIcon = locale.uiLanguageDirection == 'ltr' ? icons.outdent : icons.indent;\n        this._defineButton('indent', t('Increase indent'), localizedIndentIcon);\n        this._defineButton('outdent', t('Decrease indent'), localizedOutdentIcon);\n    }\n    /**\n     * Defines UI buttons for both toolbar and menu bar.\n     */ _defineButton(commandName, label, icon) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(commandName, ()=>{\n            const buttonView = this._createButton(ButtonView, commandName, label, icon);\n            buttonView.set({\n                tooltip: true\n            });\n            return buttonView;\n        });\n        editor.ui.componentFactory.add('menuBar:' + commandName, ()=>{\n            return this._createButton(MenuBarMenuListItemButtonView, commandName, label, icon);\n        });\n    }\n    /**\n     * Creates a button to use either in toolbar or in menu bar.\n     */ _createButton(ButtonClass, commandName, label, icon) {\n        const editor = this.editor;\n        const command = editor.commands.get(commandName);\n        const view = new ButtonClass(editor.locale);\n        view.set({\n            label,\n            icon\n        });\n        view.bind('isEnabled').to(command, 'isEnabled');\n        // Execute the command.\n        this.listenTo(view, 'execute', ()=>{\n            editor.execute(commandName);\n            editor.editing.view.focus();\n        });\n        return view;\n    }\n}\n\nclass Indent extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'Indent';\n    }\n    /**\n     * @inheritDoc\n     */ static get requires() {\n        return [\n            IndentEditing,\n            IndentUI\n        ];\n    }\n}\n\nclass IndentBlockCommand extends Command {\n    /**\n     * @inheritDoc\n     */ refresh() {\n        const editor = this.editor;\n        const model = editor.model;\n        const block = first(model.document.selection.getSelectedBlocks());\n        if (!block || !this._isIndentationChangeAllowed(block)) {\n            this.isEnabled = false;\n            return;\n        }\n        this.isEnabled = this._indentBehavior.checkEnabled(block.getAttribute('blockIndent'));\n    }\n    /**\n     * @inheritDoc\n     */ execute() {\n        const model = this.editor.model;\n        const blocksToChange = this._getBlocksToChange();\n        model.change((writer)=>{\n            for (const block of blocksToChange){\n                const currentIndent = block.getAttribute('blockIndent');\n                const nextIndent = this._indentBehavior.getNextIndent(currentIndent);\n                if (nextIndent) {\n                    writer.setAttribute('blockIndent', nextIndent, block);\n                } else {\n                    writer.removeAttribute('blockIndent', block);\n                }\n            }\n        });\n    }\n    /**\n     * Returns blocks from selection that should have blockIndent selection set.\n     */ _getBlocksToChange() {\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const blocksInSelection = Array.from(selection.getSelectedBlocks());\n        return blocksInSelection.filter((block)=>this._isIndentationChangeAllowed(block));\n    }\n    /**\n     * Returns false if indentation cannot be applied, i.e.:\n     * - for blocks disallowed by schema declaration\n     * - for blocks in Document Lists (disallowed forward indentation only). See https://github.com/ckeditor/ckeditor5/issues/14155.\n     * Otherwise returns true.\n     */ _isIndentationChangeAllowed(element) {\n        const editor = this.editor;\n        if (!editor.model.schema.checkAttribute(element, 'blockIndent')) {\n            return false;\n        }\n        if (!editor.plugins.has('ListUtils')) {\n            return true;\n        }\n        // Only forward indentation is disallowed in list items. This allows the user to outdent blocks that are already indented.\n        if (!this._indentBehavior.isForward) {\n            return true;\n        }\n        const documentListUtils = editor.plugins.get('ListUtils');\n        return !documentListUtils.isListItemBlock(element);\n    }\n    /**\n     * Creates an instance of the command.\n     */ constructor(editor, indentBehavior){\n        super(editor);\n        this._indentBehavior = indentBehavior;\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * The block indentation behavior that uses offsets to set indentation.\n */ class IndentUsingOffset {\n    /**\n     * @inheritDoc\n     */ checkEnabled(indentAttributeValue) {\n        const currentOffset = parseFloat(indentAttributeValue || '0');\n        // The command is always enabled for forward indentation.\n        return this.isForward || currentOffset > 0;\n    }\n    /**\n     * @inheritDoc\n     */ getNextIndent(indentAttributeValue) {\n        const currentOffset = parseFloat(indentAttributeValue || '0');\n        const isSameUnit = !indentAttributeValue || indentAttributeValue.endsWith(this.unit);\n        if (!isSameUnit) {\n            return this.isForward ? this.offset + this.unit : undefined;\n        }\n        const nextOffset = this.isForward ? this.offset : -this.offset;\n        const offsetToSet = currentOffset + nextOffset;\n        return offsetToSet > 0 ? offsetToSet + this.unit : undefined;\n    }\n    /**\n     * Creates an instance of the indentation behavior.\n     *\n     * @param config.direction The direction of indentation.\n     * @param config.offset The offset of the next indentation step.\n     * @param config.unit Indentation unit.\n     */ constructor(config){\n        this.isForward = config.direction === 'forward';\n        this.offset = config.offset;\n        this.unit = config.unit;\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * The block indentation behavior that uses classes to set indentation.\n */ class IndentUsingClasses {\n    /**\n     * @inheritDoc\n     */ checkEnabled(indentAttributeValue) {\n        const currentIndex = this.classes.indexOf(indentAttributeValue);\n        if (this.isForward) {\n            return currentIndex < this.classes.length - 1;\n        } else {\n            return currentIndex >= 0;\n        }\n    }\n    /**\n     * @inheritDoc\n     */ getNextIndent(indentAttributeValue) {\n        const currentIndex = this.classes.indexOf(indentAttributeValue);\n        const indexStep = this.isForward ? 1 : -1;\n        return this.classes[currentIndex + indexStep];\n    }\n    /**\n     * Creates an instance of the indentation behavior.\n     *\n     * @param config.direction The direction of indentation.\n     * @param config.classes A list of classes used for indentation.\n     */ constructor(config){\n        this.isForward = config.direction === 'forward';\n        this.classes = config.classes;\n    }\n}\n\nconst DEFAULT_ELEMENTS = [\n    'paragraph',\n    'heading1',\n    'heading2',\n    'heading3',\n    'heading4',\n    'heading5',\n    'heading6'\n];\nclass IndentBlock extends Plugin {\n    /**\n     * @inheritDoc\n     */ static get pluginName() {\n        return 'IndentBlock';\n    }\n    /**\n     * @inheritDoc\n     */ init() {\n        const editor = this.editor;\n        const configuration = editor.config.get('indentBlock');\n        if (configuration.classes && configuration.classes.length) {\n            this._setupConversionUsingClasses(configuration.classes);\n            editor.commands.add('indentBlock', new IndentBlockCommand(editor, new IndentUsingClasses({\n                direction: 'forward',\n                classes: configuration.classes\n            })));\n            editor.commands.add('outdentBlock', new IndentBlockCommand(editor, new IndentUsingClasses({\n                direction: 'backward',\n                classes: configuration.classes\n            })));\n        } else {\n            editor.data.addStyleProcessorRules(addMarginRules);\n            this._setupConversionUsingOffset();\n            editor.commands.add('indentBlock', new IndentBlockCommand(editor, new IndentUsingOffset({\n                direction: 'forward',\n                offset: configuration.offset,\n                unit: configuration.unit\n            })));\n            editor.commands.add('outdentBlock', new IndentBlockCommand(editor, new IndentUsingOffset({\n                direction: 'backward',\n                offset: configuration.offset,\n                unit: configuration.unit\n            })));\n        }\n    }\n    /**\n     * @inheritDoc\n     */ afterInit() {\n        const editor = this.editor;\n        const schema = editor.model.schema;\n        const indentCommand = editor.commands.get('indent');\n        const outdentCommand = editor.commands.get('outdent');\n        // Enable block indentation to heading configuration options. If it is not defined enable in paragraph and default headings.\n        const options = editor.config.get('heading.options');\n        const configuredElements = options && options.map((option)=>option.model);\n        const knownElements = configuredElements || DEFAULT_ELEMENTS;\n        knownElements.forEach((elementName)=>{\n            if (schema.isRegistered(elementName)) {\n                schema.extend(elementName, {\n                    allowAttributes: 'blockIndent'\n                });\n            }\n        });\n        schema.setAttributeProperties('blockIndent', {\n            isFormatting: true\n        });\n        indentCommand.registerChildCommand(editor.commands.get('indentBlock'));\n        outdentCommand.registerChildCommand(editor.commands.get('outdentBlock'));\n    }\n    /**\n     * Setups conversion for using offset indents.\n     */ _setupConversionUsingOffset() {\n        const conversion = this.editor.conversion;\n        const locale = this.editor.locale;\n        const marginProperty = locale.contentLanguageDirection === 'rtl' ? 'margin-right' : 'margin-left';\n        conversion.for('upcast').attributeToAttribute({\n            view: {\n                styles: {\n                    [marginProperty]: /[\\s\\S]+/\n                }\n            },\n            model: {\n                key: 'blockIndent',\n                value: (viewElement)=>{\n                    // Do not indent block elements in Document Lists. See https://github.com/ckeditor/ckeditor5/issues/12466.\n                    if (!viewElement.is('element', 'li')) {\n                        return viewElement.getStyle(marginProperty);\n                    }\n                }\n            }\n        });\n        conversion.for('downcast').attributeToAttribute({\n            model: 'blockIndent',\n            view: (modelAttributeValue)=>{\n                return {\n                    key: 'style',\n                    value: {\n                        [marginProperty]: modelAttributeValue\n                    }\n                };\n            }\n        });\n    }\n    /**\n     * Setups conversion for using classes.\n     */ _setupConversionUsingClasses(classes) {\n        const definition = {\n            model: {\n                key: 'blockIndent',\n                values: []\n            },\n            view: {}\n        };\n        for (const className of classes){\n            definition.model.values.push(className);\n            definition.view[className] = {\n                key: 'class',\n                value: [\n                    className\n                ]\n            };\n        }\n        this.editor.conversion.attributeToAttribute(definition);\n    }\n    /**\n     * @inheritDoc\n     */ constructor(editor){\n        super(editor);\n        editor.config.define('indentBlock', {\n            offset: 40,\n            unit: 'px'\n        });\n    }\n}\n\nexport { Indent, IndentBlock, IndentEditing, IndentUI };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentediting\n */\n\nimport { Plugin, MultiCommand } from 'ckeditor5/src/core.js';\n\n/**\n * The indent editing feature.\n *\n * This plugin registers the `'indent'` and `'outdent'` commands.\n *\n * **Note**: In order for the commands to work, at least one of the compatible features is required. Read more in the\n * {@link module:indent/indent~Indent indent feature} API documentation.\n */\nexport default class IndentEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'IndentEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.add( 'indent', new MultiCommand( editor ) );\n\t\teditor.commands.add( 'outdent', new MultiCommand( editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentui\n */\n\nimport { ButtonView, MenuBarMenuListItemButtonView } from 'ckeditor5/src/ui.js';\nimport { icons, Plugin } from 'ckeditor5/src/core.js';\n\n/**\n * The indent UI feature.\n *\n * This plugin registers the `'indent'` and `'outdent'` buttons.\n *\n * **Note**: In order for the commands to work, at least one of the compatible features is required. Read more in\n * the {@link module:indent/indent~Indent indent feature} API documentation.\n */\nexport default class IndentUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'IndentUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = editor.t;\n\n\t\tconst localizedIndentIcon = locale.uiLanguageDirection == 'ltr' ? icons.indent : icons.outdent;\n\t\tconst localizedOutdentIcon = locale.uiLanguageDirection == 'ltr' ? icons.outdent : icons.indent;\n\n\t\tthis._defineButton( 'indent', t( 'Increase indent' ), localizedIndentIcon );\n\t\tthis._defineButton( 'outdent', t( 'Decrease indent' ), localizedOutdentIcon );\n\t}\n\n\t/**\n\t * Defines UI buttons for both toolbar and menu bar.\n\t */\n\tprivate _defineButton( commandName: 'indent' | 'outdent', label: string, icon: string ): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( commandName, () => {\n\t\t\tconst buttonView = this._createButton( ButtonView, commandName, label, icon );\n\n\t\t\tbuttonView.set( {\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:' + commandName, () => {\n\t\t\treturn this._createButton( MenuBarMenuListItemButtonView, commandName, label, icon );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a button to use either in toolbar or in menu bar.\n\t */\n\tprivate _createButton<T extends typeof ButtonView | typeof MenuBarMenuListItemButtonView>(\n\t\tButtonClass: T,\n\t\tcommandName: string,\n\t\tlabel: string,\n\t\ticon: string\n\t): InstanceType<T> {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( commandName )!;\n\t\tconst view = new ButtonClass( editor.locale ) as InstanceType<T>;\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon\n\t\t} );\n\n\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t// Execute the command.\n\t\tthis.listenTo( view, 'execute', () => {\n\t\t\teditor.execute( commandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indent\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport IndentEditing from './indentediting.js';\nimport IndentUI from './indentui.js';\n\n/**\n * The indent feature.\n *\n * This plugin acts as a single entry point plugin for other features that implement indentation of elements like lists or paragraphs.\n *\n * The compatible features are:\n *\n * * The {@link module:list/list~List} or {@link module:list/list/listediting~ListEditing} feature for list indentation.\n * * The {@link module:indent/indentblock~IndentBlock} feature for block indentation.\n *\n * This is a \"glue\" plugin that loads the following plugins:\n *\n * * The {@link module:indent/indentediting~IndentEditing indent editing feature}.\n * * The {@link module:indent/indentui~IndentUI indent UI feature}.\n *\n * The dependent plugins register the `'indent'` and `'outdent'` commands and introduce the `'indent'` and `'outdent'` buttons\n * that allow to increase or decrease text indentation of supported elements.\n *\n * **Note**: In order for the commands and buttons to work, at least one of compatible features is required.\n */\nexport default class Indent extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Indent' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ IndentEditing, IndentUI ] as const;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentblockcommand\n */\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\nimport type { Element } from 'ckeditor5/src/engine.js';\nimport type { ListUtils } from '@ckeditor/ckeditor5-list';\nimport { first } from 'ckeditor5/src/utils.js';\n\nimport type { IndentBehavior } from './indentcommandbehavior/indentbehavior.js';\n\n/**\n * The indent block command.\n *\n * The command is registered by the {@link module:indent/indentblock~IndentBlock} as `'indentBlock'` for indenting blocks and\n * `'outdentBlock'` for outdenting blocks.\n *\n * To increase block indentation at the current selection, execute the command:\n *\n * ```ts\n * editor.execute( 'indentBlock' );\n * ```\n *\n * To decrease block indentation at the current selection, execute the command:\n *\n * ```ts\n * editor.execute( 'outdentBlock' );\n * ```\n */\nexport default class IndentBlockCommand extends Command {\n\t/**\n\t * The command's indentation behavior.\n\t */\n\tprivate readonly _indentBehavior: IndentBehavior;\n\n\t/**\n\t * Creates an instance of the command.\n\t */\n\tconstructor( editor: Editor, indentBehavior: IndentBehavior ) {\n\t\tsuper( editor );\n\n\t\tthis._indentBehavior = indentBehavior;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tconst block = first( model.document.selection.getSelectedBlocks() );\n\n\t\tif ( !block || !this._isIndentationChangeAllowed( block ) ) {\n\t\t\tthis.isEnabled = false;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isEnabled = this._indentBehavior.checkEnabled( block.getAttribute( 'blockIndent' ) as string );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override execute(): void {\n\t\tconst model = this.editor.model;\n\n\t\tconst blocksToChange = this._getBlocksToChange();\n\n\t\tmodel.change( writer => {\n\t\t\tfor ( const block of blocksToChange ) {\n\t\t\t\tconst currentIndent = block.getAttribute( 'blockIndent' ) as string;\n\n\t\t\t\tconst nextIndent = this._indentBehavior.getNextIndent( currentIndent );\n\n\t\t\t\tif ( nextIndent ) {\n\t\t\t\t\twriter.setAttribute( 'blockIndent', nextIndent, block );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeAttribute( 'blockIndent', block );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns blocks from selection that should have blockIndent selection set.\n\t */\n\tprivate _getBlocksToChange(): Array<Element> {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst blocksInSelection = Array.from( selection.getSelectedBlocks() );\n\n\t\treturn blocksInSelection.filter( block => this._isIndentationChangeAllowed( block ) );\n\t}\n\n\t/**\n\t * Returns false if indentation cannot be applied, i.e.:\n\t * - for blocks disallowed by schema declaration\n\t * - for blocks in Document Lists (disallowed forward indentation only). See https://github.com/ckeditor/ckeditor5/issues/14155.\n\t * Otherwise returns true.\n\t */\n\tprivate _isIndentationChangeAllowed( element: Element ): boolean {\n\t\tconst editor = this.editor;\n\n\t\tif ( !editor.model.schema.checkAttribute( element, 'blockIndent' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !editor.plugins.has( 'ListUtils' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Only forward indentation is disallowed in list items. This allows the user to outdent blocks that are already indented.\n\t\tif ( !this._indentBehavior.isForward ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst documentListUtils: ListUtils = editor.plugins.get( 'ListUtils' );\n\n\t\treturn !documentListUtils.isListItemBlock( element );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentcommandbehavior/indentusingoffset\n */\n\nimport type { IndentBehavior } from './indentbehavior.js';\n\n/**\n * The block indentation behavior that uses offsets to set indentation.\n */\nexport default class IndentUsingOffset implements IndentBehavior {\n\t/**\n\t * The direction of indentation.\n\t */\n\tpublic isForward: boolean;\n\n\t/**\n\t * The offset of the next indentation step.\n\t */\n\tpublic offset: number;\n\n\t/**\n\t * Indentation unit.\n\t */\n\tpublic unit: string;\n\n\t/**\n\t * Creates an instance of the indentation behavior.\n\t *\n\t * @param config.direction The direction of indentation.\n\t * @param config.offset The offset of the next indentation step.\n\t * @param config.unit Indentation unit.\n\t */\n\tconstructor( config: { direction: 'forward' | 'backward'; offset: number; unit: string } ) {\n\t\tthis.isForward = config.direction === 'forward';\n\t\tthis.offset = config.offset;\n\t\tthis.unit = config.unit;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic checkEnabled( indentAttributeValue: string ): boolean {\n\t\tconst currentOffset = parseFloat( indentAttributeValue || '0' );\n\n\t\t// The command is always enabled for forward indentation.\n\t\treturn this.isForward || currentOffset > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getNextIndent( indentAttributeValue: string ): string | undefined {\n\t\tconst currentOffset = parseFloat( indentAttributeValue || '0' );\n\t\tconst isSameUnit = !indentAttributeValue || indentAttributeValue.endsWith( this.unit );\n\n\t\tif ( !isSameUnit ) {\n\t\t\treturn this.isForward ? this.offset + this.unit : undefined;\n\t\t}\n\n\t\tconst nextOffset = this.isForward ? this.offset : -this.offset;\n\n\t\tconst offsetToSet = currentOffset + nextOffset;\n\n\t\treturn offsetToSet > 0 ? offsetToSet + this.unit : undefined;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentcommandbehavior/indentusingclasses\n */\n\nimport type { IndentBehavior } from './indentbehavior.js';\n\n/**\n * The block indentation behavior that uses classes to set indentation.\n */\nexport default class IndentUsingClasses implements IndentBehavior {\n\t/**\n\t * The direction of indentation.\n\t */\n\tpublic isForward: boolean;\n\n\t/**\n\t * A list of classes used for indentation.\n\t */\n\tpublic classes: Array<string>;\n\n\t/**\n\t * Creates an instance of the indentation behavior.\n\t *\n\t * @param config.direction The direction of indentation.\n\t * @param config.classes A list of classes used for indentation.\n\t */\n\tconstructor( config: { direction: 'forward' | 'backward'; classes: Array<string> } ) {\n\t\tthis.isForward = config.direction === 'forward';\n\t\tthis.classes = config.classes!;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic checkEnabled( indentAttributeValue: string ): boolean {\n\t\tconst currentIndex = this.classes.indexOf( indentAttributeValue );\n\n\t\tif ( this.isForward ) {\n\t\t\treturn currentIndex < this.classes.length - 1;\n\t\t} else {\n\t\t\treturn currentIndex >= 0;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getNextIndent( indentAttributeValue: string ): string | undefined {\n\t\tconst currentIndex = this.classes.indexOf( indentAttributeValue );\n\t\tconst indexStep = this.isForward ? 1 : -1;\n\n\t\treturn this.classes[ currentIndex + indexStep ];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentblock\n */\n\nimport { Plugin, type Editor, type MultiCommand } from 'ckeditor5/src/core.js';\nimport { addMarginRules, type AttributeDescriptor, type ViewElement } from 'ckeditor5/src/engine.js';\n\nimport IndentBlockCommand from './indentblockcommand.js';\nimport IndentUsingOffset from './indentcommandbehavior/indentusingoffset.js';\nimport IndentUsingClasses from './indentcommandbehavior/indentusingclasses.js';\nimport type { HeadingOption } from '@ckeditor/ckeditor5-heading';\n\nconst DEFAULT_ELEMENTS = [ 'paragraph', 'heading1', 'heading2', 'heading3', 'heading4', 'heading5', 'heading6' ];\n\n/**\n * The block indentation feature.\n *\n * It registers the `'indentBlock'` and `'outdentBlock'` commands.\n *\n * If the plugin {@link module:indent/indent~Indent} is defined, it also attaches the `'indentBlock'` and `'outdentBlock'` commands to\n * the `'indent'` and `'outdent'` commands.\n */\nexport default class IndentBlock extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'indentBlock', {\n\t\t\toffset: 40,\n\t\t\tunit: 'px'\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'IndentBlock' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst configuration = editor.config.get( 'indentBlock' )!;\n\n\t\tif ( configuration.classes && configuration.classes.length ) {\n\t\t\tthis._setupConversionUsingClasses( configuration.classes );\n\n\t\t\teditor.commands.add( 'indentBlock', new IndentBlockCommand( editor, new IndentUsingClasses( {\n\t\t\t\tdirection: 'forward',\n\t\t\t\tclasses: configuration.classes\n\t\t\t} ) ) );\n\n\t\t\teditor.commands.add( 'outdentBlock', new IndentBlockCommand( editor, new IndentUsingClasses( {\n\t\t\t\tdirection: 'backward',\n\t\t\t\tclasses: configuration.classes\n\t\t\t} ) ) );\n\t\t} else {\n\t\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t\t\tthis._setupConversionUsingOffset();\n\n\t\t\teditor.commands.add( 'indentBlock', new IndentBlockCommand( editor, new IndentUsingOffset( {\n\t\t\t\tdirection: 'forward',\n\t\t\t\toffset: configuration.offset!,\n\t\t\t\tunit: configuration.unit!\n\t\t\t} ) ) );\n\n\t\t\teditor.commands.add( 'outdentBlock', new IndentBlockCommand( editor, new IndentUsingOffset( {\n\t\t\t\tdirection: 'backward',\n\t\t\t\toffset: configuration.offset!,\n\t\t\t\tunit: configuration.unit!\n\t\t\t} ) ) );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic afterInit(): void {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\n\t\tconst indentCommand = editor.commands.get( 'indent' ) as MultiCommand;\n\t\tconst outdentCommand = editor.commands.get( 'outdent' ) as MultiCommand;\n\n\t\t// Enable block indentation to heading configuration options. If it is not defined enable in paragraph and default headings.\n\t\tconst options: Array<HeadingOption> = editor.config.get( 'heading.options' )!;\n\t\tconst configuredElements = options && options.map( option => option.model );\n\t\tconst knownElements = configuredElements || DEFAULT_ELEMENTS;\n\n\t\tknownElements.forEach( elementName => {\n\t\t\tif ( schema.isRegistered( elementName ) ) {\n\t\t\t\tschema.extend( elementName, { allowAttributes: 'blockIndent' } );\n\t\t\t}\n\t\t} );\n\n\t\tschema.setAttributeProperties( 'blockIndent', { isFormatting: true } );\n\n\t\tindentCommand.registerChildCommand( editor.commands.get( 'indentBlock' )! );\n\t\toutdentCommand.registerChildCommand( editor.commands.get( 'outdentBlock' )! );\n\t}\n\n\t/**\n\t * Setups conversion for using offset indents.\n\t */\n\tprivate _setupConversionUsingOffset(): void {\n\t\tconst conversion = this.editor.conversion;\n\t\tconst locale = this.editor.locale;\n\t\tconst marginProperty = locale.contentLanguageDirection === 'rtl' ? 'margin-right' : 'margin-left';\n\n\t\tconversion.for( 'upcast' ).attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tstyles: {\n\t\t\t\t\t[ marginProperty ]: /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'blockIndent',\n\t\t\t\tvalue: ( viewElement: ViewElement ) => {\n\t\t\t\t\t// Do not indent block elements in Document Lists. See https://github.com/ckeditor/ckeditor5/issues/12466.\n\t\t\t\t\tif ( !viewElement.is( 'element', 'li' ) ) {\n\t\t\t\t\t\treturn viewElement.getStyle( marginProperty );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tconversion.for( 'downcast' ).attributeToAttribute( {\n\t\t\tmodel: 'blockIndent',\n\t\t\tview: modelAttributeValue => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: 'style',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\t[ marginProperty as string ]: modelAttributeValue as string\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Setups conversion for using classes.\n\t */\n\tprivate _setupConversionUsingClasses( classes: Array<string> ) {\n\t\tconst definition: {\n\t\t\tmodel: { key: string; values: Array<string> };\n\t\t\tview: Record<string, AttributeDescriptor>;\n\t\t} = {\n\t\t\tmodel: {\n\t\t\t\tkey: 'blockIndent',\n\t\t\t\tvalues: []\n\t\t\t},\n\t\t\tview: {}\n\t\t};\n\n\t\tfor ( const className of classes ) {\n\t\t\tdefinition.model.values.push( className );\n\t\t\tdefinition.view[ className ] = {\n\t\t\t\tkey: 'class',\n\t\t\t\tvalue: [ className ]\n\t\t\t};\n\t\t}\n\n\t\tthis.editor.conversion.attributeToAttribute( definition );\n\t}\n}\n"]}